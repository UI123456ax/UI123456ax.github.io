{
    "version": "https://jsonfeed.org/version/1",
    "title": "ネオンノワール",
    "description": "NeonNoir ブログ",
    "home_page_url": "https://blog.neonnoir.link",
    "items": [
        {
            "id": "https://blog.neonnoir.link/2025/11/01/0_100/21_%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/",
            "url": "https://blog.neonnoir.link/2025/11/01/0_100/21_%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/",
            "title": "域名解析及其应用",
            "date_published": "2025-11-01T01:56:10.000Z",
            "content_html": "<h1 id=\"核心记录类型\"><a class=\"anchor\" href=\"#核心记录类型\">#</a> 核心记录类型</h1>\n<p>DNS 管理界面：“主机记录”（Host/Name）、“记录类型”（Type）、“记录值”（Value/Points to）、“TTL”</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">记录类型</th>\n<th style=\"text-align:left\">主机记录 (Host)</th>\n<th style=\"text-align:left\">记录值 (Value)</th>\n<th style=\"text-align:left\">用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>A</strong></td>\n<td style=\"text-align:left\"><code>www</code> ,  <code>@</code> ,  <code>blog</code></td>\n<td style=\"text-align:left\">一个 IPv4 地址 (如  <code>1.2.3.4</code> )</td>\n<td style=\"text-align:left\"><strong>指向服务器 IP</strong>：将域名指向你的网站或服务器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>AAAA</strong></td>\n<td style=\"text-align:left\"><code>www</code> ,  <code>@</code> ,  <code>ipv6</code></td>\n<td style=\"text-align:left\">一个 IPv6 地址</td>\n<td style=\"text-align:left\"><strong>指向 IPv6 地址</strong>：功能同 A 记录，用于支持 IPv6 的服务器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>CNAME</strong></td>\n<td style=\"text-align:left\"><code>www</code> ,  <code>mail</code></td>\n<td style=\"text-align:left\">另一个域名 (如  <code>pages.github.io</code> )</td>\n<td style=\"text-align:left\"><strong>设置别名</strong>：将一个域名指向另一个域名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>MX</strong></td>\n<td style=\"text-align:left\"><code>@</code></td>\n<td style=\"text-align:left\"><code>10 mx1.example.com.</code></td>\n<td style=\"text-align:left\"><strong>设置邮箱服务器</strong>： <code>10</code>  是优先级（数字越小越高）。可设置多条，实现主备邮箱服务器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>TXT</strong></td>\n<td style=\"text-align:left\"><code>@</code> ,  <code>_dmarc</code></td>\n<td style=\"text-align:left\">文本字符串</td>\n<td style=\"text-align:left\"><strong>验证与策略</strong>：常用于 SPF（防邮件伪造）、DKIM（邮件签名）、DMARC 和域名所有权验证</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>NS</strong></td>\n<td style=\"text-align:left\"><code>blog</code></td>\n<td style=\"text-align:left\"><code>ns1.otherprovider.com.</code></td>\n<td style=\"text-align:left\"><strong>委派子域名</strong>：将子域名的解析管理权交给其他 DNS 服务商。常用于部门或服务独立管理其域名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>SRV</strong></td>\n<td style=\"text-align:left\"><code>_minecraft._tcp.play</code></td>\n<td style=\"text-align:left\"><code>10 5 25565 server.example.com.</code></td>\n<td style=\"text-align:left\"><strong>指定服务端口</strong>：为特定服务（如 Minecraft、SIP）指定服务器和端口。格式为  <code>优先级 权重 端口 目标</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>CAA</strong></td>\n<td style=\"text-align:left\"><code>@</code></td>\n<td style=\"text-align:left\"><code>0 issue &quot;letsencrypt.org&quot;</code></td>\n<td style=\"text-align:left\"><strong>限制证书颁发机构</strong>：为提高安全，只允许指定的 CA 为你的域名颁发 SSL 证书</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>PTR</strong></td>\n<td style=\"text-align:left\"><code>1.1.168.192.in-addr.arpa</code></td>\n<td style=\"text-align:left\"><code>mail.example.com.</code></td>\n<td style=\"text-align:left\"><strong>反向解析 (IP -&gt; 域名)</strong>：主要用于邮件服务器反向检查</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>ALIAS / ANAME</strong></td>\n<td style=\"text-align:left\"><code>@</code></td>\n<td style=\"text-align:left\"><code>some-service.provider.com</code></td>\n<td style=\"text-align:left\"><strong>根域名别名 (非标)</strong>：类似 CNAME 但可用于根域名。这是 DNS 服务商提供的特殊功能（如 Cloudflare 的 CNAME Flattening），用于将根域名指向另一个域名</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意：</p>\n<ol>\n<li><code>@</code>  代表根域名（如  <code>example.com</code> ）</li>\n<li>根域名 ( <code>@</code> ) 通常不能设置  <code>CNAME</code>  记录</li>\n<li><code>PTR</code>  通常在你的 IP 提供商（云服务商 / IDC）处配置，而非域名 DNS 服务商处</li>\n</ol>\n</blockquote>\n<h1 id=\"域名与服务器\"><a class=\"anchor\" href=\"#域名与服务器\">#</a> 域名与服务器</h1>\n<h2 id=\"部署网站\"><a class=\"anchor\" href=\"#部署网站\">#</a> 部署网站</h2>\n<p>假设服务器 IP 是  <code>100.107.102.101</code> ，域名是  <code>mydomain.com</code></p>\n<p>例：让  <code>mydomain.com</code>  和  <code>www.mydomain.com</code>  都能访问网站</p>\n<ol>\n<li>\n<p><strong>设置根域名</strong>：添加 A 记录</p>\n<ul>\n<li>主机记录:  <code>@</code></li>\n<li>记录类型:  <code>A</code></li>\n<li>记录值:  <code>100.107.102.101</code></li>\n</ul>\n</li>\n<li>\n<p><strong>设置 www 子域名</strong>：添加 CNAME 记录，将其指向根域名</p>\n<ul>\n<li>主机记录:  <code>www</code></li>\n<li>记录类型:  <code>CNAME</code></li>\n<li>记录值:  <code>mydomain.com</code></li>\n</ul>\n<blockquote>\n<p>未来更换服务器 IP 时，只需修改 A 记录， <code>www</code>  会自动跟随变化</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"反向代理端口映射\"><a class=\"anchor\" href=\"#反向代理端口映射\">#</a> 反向代理：端口映射</h2>\n<p>标准的 DNS 记录（A 记录）只能将域名指向 IP 地址，不能直接指定端口。<br />\n想让域名映射端口，最正确的做法是配置一个 Web 服务器（Nginx 或 Apache）</p>\n<p>例：将域名（ <code>service.mydomain.com</code> ）指向服务器  <code>8080</code>  端口</p>\n<ol>\n<li><strong>DNS 设置</strong>：添加 A 记录，将域名指向服务器 IP 地址\n<ul>\n<li>主机记录： <code>service</code></li>\n<li>记录类型： <code>A</code></li>\n<li>记录值： <code>你的服务器IP</code></li>\n</ul>\n</li>\n<li><strong>服务器配置</strong>（以 Nginx 为例）\n<ul>\n<li>当收到访问  <code>service.mydomain.com</code>  的请求时，Nginx 会把这个请求转发到你服务器上运行在特定端口（比如 8080）的那个应用</li>\n<li>\n<blockquote>\n<p>Nginx 监听标准的 <strong>80/443</strong> 端口</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n<p>简单的 Nginx 配置：</p>\n<pre><code class=\"language-conf\">server &#123;\n    listen 80;\n    server_name service.mydomain.com;\n\n    location / &#123;\n        # 将所有请求转发到本机的 8080 端口\n        proxy_pass http://127.0.0.1:8080;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    &#125;\n&#125;\n</code></pre>\n<blockquote>\n<p>当用户通过浏览器访问时，会默认使用 80 (HTTP) 或 443 (HTTPS) 端口</p>\n</blockquote>\n<h2 id=\"反向代理代理镜像\"><a class=\"anchor\" href=\"#反向代理代理镜像\">#</a> 反向代理：代理镜像</h2>\n<p>用户通过访问 Nginx 服务器来访问目标网站，而目标网站的内容会被代理到指定的域名下</p>\n<blockquote>\n<p>DNS 配置同上同理</p>\n</blockquote>\n<h3 id=\"配置示例\"><a class=\"anchor\" href=\"#配置示例\">#</a> 配置示例</h3>\n<p>以下是一个 Nginx 的配置示例，将请求转发到不同的后端服务：</p>\n<pre><code class=\"language-conf\">server &#123;\n    listen 80;\n    server_name your-domain.com;  # 你的域名\n  \n    location / &#123;\n        # 目标网站地址\n        proxy_pass https://target-website.com;\n      \n        # 设置代理头信息\n        proxy_set_header Host target-website.com;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header User-Agent $http_user_agent;\n        proxy_set_header Accept-Encoding &quot;&quot;;\n      \n        # 禁用缓存以便实时镜像\n        proxy_buffering off;\n      \n        # 超时设置\n        proxy_connect_timeout 30s;\n        proxy_read_timeout 30s;\n    &#125;\n&#125;\n</code></pre>\n<h1 id=\"dns-高级配置\"><a class=\"anchor\" href=\"#dns-高级配置\">#</a> DNS 高级配置</h1>\n<h2 id=\"ns-记录-委派子域名管理权\"><a class=\"anchor\" href=\"#ns-记录-委派子域名管理权\">#</a> NS 记录 - 委派子域名管理权</h2>\n<p>例：将  <code>blog.mydomain.com</code>  这个子域名交给另一个解析平台或服务来管理（例如 CloudDns 双向解析至 CloudFlare）</p>\n<ul>\n<li><strong>操作</strong>：在  <code>mydomain.com</code>  的 DNS 设置中，添加 NS 记录\n<ul>\n<li>主机记录:  <code>blog</code></li>\n<li>记录类型:  <code>NS</code></li>\n<li>记录值:  <code>ns1.otherprovider.com</code>  (对方提供的 DNS 服务器地址)</li>\n<li>\n<blockquote>\n<p>通常需要添加至少两条 NS 记录</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><strong>效果</strong>：之后所有  <code>blog.mydomain.com</code>  及其下级域名（如  <code>posts.blog.mydomain.com</code> ）的解析请求，都会被导向  <code>ns1.otherprovider.com</code>  去处理</li>\n</ul>\n<blockquote>\n<p>根域名同理，将主机记录替换为  <code>@</code>  即可</p>\n</blockquote>\n<h2 id=\"srv-记录-指定服务端口\"><a class=\"anchor\" href=\"#srv-记录-指定服务端口\">#</a> SRV 记录 - 指定服务端口</h2>\n<p>例：配置 Minecraft 服务器或其他需要指定端口的服务</p>\n<ul>\n<li><strong>格式</strong>： <code>_服务._协议.主机记录</code></li>\n<li><strong>示例</strong>：为  <code>play.mydomain.com</code>  配置 Minecraft 服务\n<ul>\n<li>主机记录:  <code>_minecraft._tcp.play</code></li>\n<li>记录类型:  <code>SRV</code></li>\n<li>记录值 / 数据:  <code>10 5 25565 server.mydomain.com.</code>  (优先级 权重 端口 目标主机)</li>\n</ul>\n</li>\n<li><strong>解释</strong>：客户端连接  <code>play.mydomain.com</code>  时，会自动查找此 SRV 记录，并连接到  <code>server.mydomain.com</code>  的  <code>25565</code>  端口</li>\n</ul>\n<blockquote>\n<p><strong>SRV 记录可以指定服务的端口，但是绝大多数 Web 浏览器不支持通过 SRV 记录来访问网站</strong><br />\n SRV 记录主要用于特定协议的客户端自动发现服务，例如 Minecraft 游戏、VoIP 电话 (SIP)、邮件或即时通讯 (XMPP) 等，不适用于通用的 Web 访问<br />\n对于网站或 Web 应用，更多的是使用反向代理</p>\n</blockquote>\n<h2 id=\"caa-记录-限制-ssl-证书颁发机构\"><a class=\"anchor\" href=\"#caa-记录-限制-ssl-证书颁发机构\">#</a> CAA 记录 - 限制 SSL 证书颁发机构</h2>\n<p>例：为提高安全性，只允许 Let's Encrypt 为你的域名颁发证书</p>\n<ul>\n<li><strong>操作</strong>：添加 CAA 记录\n<ul>\n<li>主机记录:  <code>@</code></li>\n<li>记录类型:  <code>CAA</code></li>\n<li>记录值 / 数据:  <code>0 issue &quot;letsencrypt.org&quot;</code></li>\n</ul>\n</li>\n<li><strong>效果</strong>：其他 CA（证书颁发机构）在检查时会看到此记录，并拒绝为你的域名颁发证书</li>\n</ul>\n",
            "tags": [
                "Domain",
                "DNS"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2025/07/22/0_100/20_Docker%E5%9F%BA%E7%A1%80/",
            "url": "https://blog.neonnoir.link/2025/07/22/0_100/20_Docker%E5%9F%BA%E7%A1%80/",
            "title": "Docker",
            "date_published": "2025-07-22T09:33:59.000Z",
            "content_html": "<p>DockerHub: <a href=\"https://hub.docker.com/\">https://hub.docker.com/</a></p>\n<h1 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h1>\n<p>安装 Docker</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://get.docker.com <span class=\"token parameter variable\">-o</span> install-docker.sh</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">sh</span> install-docker.sh</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://get.docker.com<span class=\"token operator\">|</span> <span class=\"token function\">bash</span> <span class=\"token parameter variable\">-s</span> <span class=\"token function\">docker</span> <span class=\"token parameter variable\">--mirror</span> Aliyun</pre></td></tr></table></figure><p>启动 Docker</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl start <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> <span class=\"token function\">docker</span></pre></td></tr></table></figure><h1 id=\"镜像\"><a class=\"anchor\" href=\"#镜像\">#</a> 镜像</h1>\n<h2 id=\"拉取镜像\"><a class=\"anchor\" href=\"#拉取镜像\">#</a> 拉取镜像</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 完整格式</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> pull docker.io/library/nginx:latest</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 若是官网渠道下的镜像则可省略</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">docker</span> pull library/nginx:latest</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">docker</span> pull nginx:latest</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># latest 为版本号 不填则默认最新版本</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">docker</span> pull nginx</pre></td></tr></table></figure><blockquote>\n<p><code>docker.io/library/</code>  为 docker 官方的公共仓库 library 可省略</p>\n</blockquote>\n<h2 id=\"管理镜像\"><a class=\"anchor\" href=\"#管理镜像\">#</a> 管理镜像</h2>\n<ul>\n<li>docker images                          : 列出本地存储的所有镜像</li>\n<li>docker rmi (IMAGE ID)                  : 删除镜像</li>\n<li>docker ps                              : 列出当前正在运行的容器</li>\n<li>docker rm (CONTAINER ID 或 NAMES)      : 删除 (运行) 容器，可选参数 <code>-f</code>  强制删除容器</li>\n<li>docker restart (CONTAINER ID 或 NAMES) : 重启容器</li>\n<li>docker stop (CONTAINER ID 或 NAMES)    : 停止已启动的容器</li>\n<li>docker start (CONTAINER ID 或 NAMES)   : 启动已停止的容器</li>\n</ul>\n<blockquote>\n<p>对于已停止的容器而言，需要通过  <code>docker ps -a</code>  查看所有容器 (包括停止与开启)</p>\n</blockquote>\n<h2 id=\"镜像网络\"><a class=\"anchor\" href=\"#镜像网络\">#</a> 镜像网络</h2>\n<p>用于容器之间的通信，容器间可使用 NAMES 代替 IP 地址</p>\n<ul>\n<li>docker network ls                               : 列出所有网络</li>\n<li>docker network create (network)                 : 创建一个新的网络 (Bridge 网络)</li>\n<li>docker network rm (network)                     : 删除指定的网络</li>\n<li>docker network connect (network) (container)    : 连接容器到网络</li>\n<li>docker network disconnect (network) (container) : 断开容器与网络的连接</li>\n</ul>\n<h1 id=\"容器\"><a class=\"anchor\" href=\"#容器\">#</a> 容器</h1>\n<h2 id=\"运行容器\"><a class=\"anchor\" href=\"#运行容器\">#</a> 运行容器</h2>\n<p>docker run nginx : 启动容器并运行命令</p>\n<blockquote>\n<p>若不存在镜像，则 run 命令会先拉取镜像再启动新的容器</p>\n</blockquote>\n<p>常用参数:</p>\n<ul>\n<li>-d                            : 后台运行容器并返回容器 ID</li>\n<li>-p (host_port:container_port) : 端口映射 宿主机端口：容器内端口；将本地端口映射到容器端口</li>\n<li>-v (host_dir:container_dir)   : 挂载卷 宿主机目录：容器内目录；将主机目录挂载到容器目录</li>\n<li>-e (ENVIRONMENT=value)        : 设置环境变量</li>\n<li>-it                           : 交互式运行容器，即进入容器内部命令行</li>\n<li>--name (docker_name)          : 设置容器名称</li>\n<li>--rm                          : 容器停止后自动删除容器</li>\n<li>--network (网络模式 或 连接网络)     : 指定容器的网络模式 ；默认 Bridge 模式</li>\n<li>--restart [always、unless-stopped] : 容器的重启策略</li>\n</ul>\n<blockquote>\n<p>always : 容器停止就立刻重启 ；unless-stopped : 除手动停止的容器外，容器停止就立刻重启</p>\n</blockquote>\n<h2 id=\"容器内管理\"><a class=\"anchor\" href=\"#容器内管理\">#</a> 容器内管理</h2>\n<p>docker exec [OPTIONS] (CONTAINER ID 或 NAMES) (COMMAND) : 于运行中的容器内执行命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 容器内执行 LinuxShell</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> my_container <span class=\"token function\">ps</span> <span class=\"token parameter variable\">-ef</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 参数 `-it` 可在容器里启动交互式的 Shell (指定 /bin/bash)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> my_container /bin/sh</pre></td></tr></table></figure><h1 id=\"制作\"><a class=\"anchor\" href=\"#制作\">#</a> 制作</h1>\n<h2 id=\"配置文件\"><a class=\"anchor\" href=\"#配置文件\">#</a> 配置文件</h2>\n<p>新建  <code>Dockerfile</code>  文件，这是一个用来构建镜像的文本文件<br />\n常用指令：</p>\n<ul>\n<li>FROM (nginx:latest)                    : 指定基础镜像，以基础镜像为模板构建 (例如 Python)</li>\n<li>WORKDIR (/Directory)                   : 设置指令工作目录</li>\n<li>COPY (当前目录 工作目录)                 : 复制文件或目录到镜像</li>\n<li>RUN (ShellCommand)                     : <strong>构建镜像过程中</strong>执行命令，执行终端 Shell 命令</li>\n<li>ENV (key1=value1 key2=value2)          : 设置环境变量</li>\n<li>EXPOSE (8080)                          : 声明容器运行时监听的端口；实际端口以创建容器 <code>-p</code>  参数为主</li>\n<li>CMD ([&quot;可执行文件或命令&quot;,&quot;...&quot;])        : <strong>容器创建时</strong>的默认命令；命令可以被其他命令覆盖</li>\n<li>ENTRYPOINT ([&quot;可执行文件或命令&quot;,&quot;...&quot;]) ： <strong>容器创建时</strong>的主要命令；命令不会被覆盖，且一定会执行</li>\n</ul>\n<pre><code class=\"language-Dockerfile\">FROM python:3.13-slim\n# 设置工作目录\nWORKDIR /app\n# 复制 当前目录 至 当前工作目录 /app下\nCOPY . .\n\nRUN pip install -r requirements.txt\n\nENTRYPOINT [&quot;python3&quot;,&quot;main.py&quot;]\n</code></pre>\n<h2 id=\"推送镜像\"><a class=\"anchor\" href=\"#推送镜像\">#</a> 推送镜像</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 登录 DockerHub</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> login</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 参数 `-t` 指定镜像名称；若不推送，则 username 可省略；`.` 表示当前目录下</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> <span class=\"token punctuation\">(</span>username/docker_name:latest<span class=\"token punctuation\">)</span> <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 推送镜像</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">docker</span> push <span class=\"token punctuation\">(</span>username/docker_name:latest<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"docker-compose\"><a class=\"anchor\" href=\"#docker-compose\">#</a> Docker Compose</h1>\n<h2 id=\"格式\"><a class=\"anchor\" href=\"#格式\">#</a> 格式</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> network create docker_network</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token parameter variable\">--name</span> docker_name_1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">ENVIRONMENT_1</span><span class=\"token operator\">=</span>value_1 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">ENVIRONMENT_2</span><span class=\"token operator\">=</span>value_2 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token parameter variable\">-v</span> /my/data:/data <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>image_1:latest</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token parameter variable\">--name</span> docker_name_2 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token parameter variable\">-p</span> <span class=\"token number\">8099</span>:8099 <span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>image_2</pre></td></tr></table></figure><p>其对应的 Compose 文件为:</p>\n<blockquote>\n<p>docker-compose.yml</p>\n</blockquote>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 自动创建子网络</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">docker_name_1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> image_1<span class=\"token punctuation\">:</span>lates</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token key atrule\">ENVIRONMENT_1</span><span class=\"token punctuation\">:</span> value_1</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token key atrule\">ENVIRONMENT_2</span><span class=\"token punctuation\">:</span> value_2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">-</span> /my/data<span class=\"token punctuation\">:</span>/data</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">docker_name_2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> image_2</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">-</span> 8099<span class=\"token punctuation\">:</span><span class=\"token number\">8099</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\"># 先启动 `docker_name_1`, 再启动 `docker_name_2`</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">-</span> docker_name_1</pre></td></tr></table></figure><blockquote>\n<p>小技巧：可用 AI 进行解析转换</p>\n</blockquote>\n<h2 id=\"运行\"><a class=\"anchor\" href=\"#运行\">#</a> 运行</h2>\n<p>启动项目</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 参数 `-d` 表示后台运行</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> compose up <span class=\"token parameter variable\">-d</span></pre></td></tr></table></figure><p>关闭项目</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 停止并删除容器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> compose down</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 停止容器 但不删除</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">docker</span> compose stop</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 启动停止的容器</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">docker</span> compose start</pre></td></tr></table></figure><blockquote>\n<p>参数  <code>-f File.yml</code>  可指定 Compose 配置文件；默认识别 docker-compose.yml 文件</p>\n</blockquote>\n",
            "tags": [
                "Notes",
                "Docker"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2024/12/14/0_100/18_CloudDns%E5%8F%8C%E5%90%91%E8%A7%A3%E6%9E%90/",
            "url": "https://blog.neonnoir.link/2024/12/14/0_100/18_CloudDns%E5%8F%8C%E5%90%91%E8%A7%A3%E6%9E%90/",
            "title": "CloudDns双向解析",
            "date_published": "2024-12-14T06:31:02.000Z",
            "content_html": "<h1 id=\"说明\"><a class=\"anchor\" href=\"#说明\">#</a> 说明</h1>\n<p>本篇文章介绍如何将 ClouDns 双向解析至 CloudFlare 托管</p>\n<h1 id=\"域名托管\"><a class=\"anchor\" href=\"#域名托管\">#</a> 域名托管</h1>\n<p>在<a href=\"https://www.cloudns.net/records/domain/\"> ClouDns</a> 中将主域名通过 NS 指向到两个名称服务器</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>主机</th>\n<th>指向到</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NS</td>\n<td>你的主域名 (一般空着即可)</td>\n<td>名称服务器 1</td>\n</tr>\n<tr>\n<td>NS</td>\n<td>你的主域名 (一般空着即可)</td>\n<td>名称服务器 2</td>\n</tr>\n</tbody>\n</table>\n<p>如上添加后，等待保持活动状态即可</p>\n<blockquote>\n<p>注意此时域名并未配置 SSL/TLS 证书验证</p>\n</blockquote>\n<h1 id=\"解析\"><a class=\"anchor\" href=\"#解析\">#</a> 解析</h1>\n<p>接下来的操作全在<a href=\"https://www.cloudns.net/records/domain/\"> ClouDns</a> 内完成</p>\n<h2 id=\"子域解析\"><a class=\"anchor\" href=\"#子域解析\">#</a> 子域解析</h2>\n<p>作用：访问指向域名</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>主机</th>\n<th>指向到</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NS</td>\n<td>子域名</td>\n<td>名称服务器 1</td>\n</tr>\n<tr>\n<td>NS</td>\n<td>子域名</td>\n<td>名称服务器 2</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"ssl-简单解析\"><a class=\"anchor\" href=\"#ssl-简单解析\">#</a> SSL 简单解析</h2>\n<p>添加域名后 在域名管理的  <code>SSL/TLS - 边缘证书</code>  内有待验证的证书<br />\n此时处于  <code>未验证</code> 需要添加 证书 TXT 验证<br />\n<img loading=\"lazy\" data-src=\"\" alt=\"\" /><br />\n复制 证书验证 TXT 名称 (不包括主域)、证书验证 TXT 值<br />\n并在<a href=\"https://www.cloudns.net/records/domain/\"> ClouDns</a> 内添加新记录</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>主机</th>\n<th>指向到</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>TXT</td>\n<td>_acme-challenge</td>\n<td>证书验证 TXT 值</td>\n</tr>\n<tr>\n<td>TXT</td>\n<td>_acme-challenge</td>\n<td>证书验证 TXT 值</td>\n</tr>\n</tbody>\n</table>\n<p>添加子域名也是同样的操作，复制时需将子域也添加进去</p>\n<blockquote>\n<p>不建议这样解析 每三个月证书会更新 到时又得重新解析（麻烦</p>\n</blockquote>\n<h2 id=\"ssl-长效解析\"><a class=\"anchor\" href=\"#ssl-长效解析\">#</a> SSL 长效解析</h2>\n<h3 id=\"主域添加\"><a class=\"anchor\" href=\"#主域添加\">#</a> 主域添加</h3>\n<p>作用：配置 SSL/TLS 证书</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>主机</th>\n<th>指向到</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NS</td>\n<td>_acme-challenge</td>\n<td>名称服务器 1</td>\n</tr>\n<tr>\n<td>NS</td>\n<td>_acme-challenge</td>\n<td>名称服务器 2</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"子域添加\"><a class=\"anchor\" href=\"#子域添加\">#</a> 子域添加</h3>\n<p>添加子域只比添加主域多了个步骤</p>\n<p>作用：配置 SSL/TLS 证书</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>主机</th>\n<th>指向到</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NS</td>\n<td>_acme-challenge. 子域名</td>\n<td>名称服务器 1</td>\n</tr>\n<tr>\n<td>NS</td>\n<td>_acme-challenge. 子域名</td>\n<td>名称服务器 2</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "CloudFlare",
                "Domain"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2024/09/16/0_100/17_%E4%BD%BF%E7%94%A8CloudFlare%E7%BB%99GithubPage%E5%8A%A0%E9%80%9F/",
            "url": "https://blog.neonnoir.link/2024/09/16/0_100/17_%E4%BD%BF%E7%94%A8CloudFlare%E7%BB%99GithubPage%E5%8A%A0%E9%80%9F/",
            "title": "使用CloudFlare给GithubPage加速",
            "date_published": "2024-09-16T03:13:32.000Z",
            "content_html": "<h1 id=\"准备工作\"><a class=\"anchor\" href=\"#准备工作\">#</a> 准备工作</h1>\n<ul>\n<li>已注册的域名</li>\n<li>CloudFlare 账号（<a href=\"https://dash.cloudflare.com/sign-up\">注册地址</a>）</li>\n<li>GitHub 账号及  <code>username.github.io</code>  仓库</li>\n</ul>\n<h1 id=\"github-解析域名\"><a class=\"anchor\" href=\"#github-解析域名\">#</a> GitHub 解析域名</h1>\n<p>登录 GitHub，进入个人设置页面：<a href=\"https://github.com/settings/pages\">GitHub Pages 设置</a><br />\n点击  <code>Add a domain</code>  添加你的域名，并在 DNS 解析处填写对应 TXT 验证值以验证 Github 绑定</p>\n<p><img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/17_/17_00.png\" alt=\"00\" /></p>\n<h1 id=\"cloudflare-dns-解析配置\"><a class=\"anchor\" href=\"#cloudflare-dns-解析配置\">#</a> CloudFlare DNS 解析配置</h1>\n<h2 id=\"基本配置\"><a class=\"anchor\" href=\"#基本配置\">#</a> 基本配置</h2>\n<p>添加以下 DNS 记录</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>名称</th>\n<th>内容 / 值</th>\n<th>TTL</th>\n<th>代理状态</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>@</td>\n<td>185.199.108.153</td>\n<td>自动</td>\n<td>关闭</td>\n</tr>\n<tr>\n<td>CNAME</td>\n<td>www</td>\n<td><code>&lt;username&gt;</code> .github.io</td>\n<td>自动</td>\n<td>已代理</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意：</p>\n<ul>\n<li>将  <code>&lt;username&gt;</code>  替换为您的 GitHub 用户名</li>\n<li>确保 A 记录代理状态为 &quot;关闭&quot;（橙色云图标）</li>\n</ul>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/17_/17_01.png\" alt=\"01\" /></p>\n<h2 id=\"完整ip地址列表备用方案\"><a class=\"anchor\" href=\"#完整ip地址列表备用方案\">#</a> 完整 IP 地址列表（备用方案）</h2>\n<p>如果基本配置不生效，建议添加 GitHub Pages 的所有 IP 地址：</p>\n<h3 id=\"ipv4地址\"><a class=\"anchor\" href=\"#ipv4地址\">#</a> IPv4 地址</h3>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>名称</th>\n<th>内容 / 值</th>\n<th>TTL</th>\n<th>代理状态</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>@</td>\n<td>185.199.108.153</td>\n<td>自动</td>\n<td>关闭</td>\n</tr>\n<tr>\n<td>A</td>\n<td>@</td>\n<td>185.199.109.153</td>\n<td>自动</td>\n<td>关闭</td>\n</tr>\n<tr>\n<td>A</td>\n<td>@</td>\n<td>185.199.110.153</td>\n<td>自动</td>\n<td>关闭</td>\n</tr>\n<tr>\n<td>A</td>\n<td>@</td>\n<td>185.199.111.153</td>\n<td>自动</td>\n<td>关闭</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"ipv6地址\"><a class=\"anchor\" href=\"#ipv6地址\">#</a> IPv6 地址</h3>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>名称</th>\n<th>内容 / 值</th>\n<th>TTL</th>\n<th>代理状态</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AAAA</td>\n<td>@</td>\n<td>2606:50c0:8000::153</td>\n<td>自动</td>\n<td>关闭</td>\n</tr>\n<tr>\n<td>AAAA</td>\n<td>@</td>\n<td>2606:50c0:8001::153</td>\n<td>自动</td>\n<td>关闭</td>\n</tr>\n<tr>\n<td>AAAA</td>\n<td>@</td>\n<td>2606:50c0:8002::153</td>\n<td>自动</td>\n<td>关闭</td>\n</tr>\n<tr>\n<td>AAAA</td>\n<td>@</td>\n<td>2606:50c0:8003::153</td>\n<td>自动</td>\n<td>关闭</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"github-仓库设置\"><a class=\"anchor\" href=\"#github-仓库设置\">#</a> GitHub 仓库设置</h1>\n<ol>\n<li>进入  <code>&lt;username&gt;.github.io</code>  仓库</li>\n<li>在 &quot;Settings&quot; → &quot;Pages&quot; 添加域名（如：<a href=\"http://example.com\">example.com</a>）</li>\n<li>勾选 &quot;Enforce HTTPS&quot; 选项</li>\n<li>点击 &quot;Save&quot; 保存设置</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/17_/17_02.png\" alt=\"02\" /></p>\n<blockquote>\n<p>DNS 更改通常需要 <strong>10-30 分钟</strong> 生效</p>\n</blockquote>\n<h1 id=\"优点\"><a class=\"anchor\" href=\"#优点\">#</a> 优点</h1>\n<p>能加速域名下的所有内容，可以用来在 GitHub 上弄<strong>存储图床</strong>、博客文章等公开性内容</p>\n<blockquote>\n<p>理论上任意 CDN 加速都可以</p>\n</blockquote>\n<ul>\n<li>个人博客加速</li>\n<li>项目文档托管</li>\n<li>静态网站部署</li>\n<li>图床资源加速</li>\n</ul>\n<p>若添加的是  <code>&lt;username&gt;.github.io</code>  仓库，则其余仓库为  <code>yourdomain.com/&lt;仓库名&gt;</code></p>\n",
            "tags": [
                "Github",
                "Domain",
                "Cloudflare"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2024/09/16/0_100/16_GitHub%E8%AE%BE%E7%BD%AE%E5%8F%8C%E8%B4%A6%E5%8F%B7%E4%B8%8A%E4%BC%A0/",
            "url": "https://blog.neonnoir.link/2024/09/16/0_100/16_GitHub%E8%AE%BE%E7%BD%AE%E5%8F%8C%E8%B4%A6%E5%8F%B7%E4%B8%8A%E4%BC%A0/",
            "title": "GitHub配置多账号git上传",
            "date_published": "2024-09-16T01:52:32.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>记录一次关于 Github 多账号 git 的配置<br />\n将仓库内容上传  <code>AccountA</code>  的同时上传到我的另一个账号  <code>AccountB</code></p>\n<h1 id=\"流程\"><a class=\"anchor\" href=\"#流程\">#</a> 流程</h1>\n<h2 id=\"生成密钥\"><a class=\"anchor\" href=\"#生成密钥\">#</a> 生成密钥</h2>\n<ol>\n<li>生成新的 SSH 密钥对（假设新密钥对的名称为  <code>id_rsa_b</code> ）</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ssh-keygen <span class=\"token parameter variable\">-t</span> ed25519 <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"your_email@example.com\"</span> <span class=\"token parameter variable\">-f</span> ~/.ssh/id_rsa_b</pre></td></tr></table></figure><ol start=\"2\">\n<li>将新生成的公钥添加到 GitHub 账号 B (AccountB) 的 SSH 密钥列表中</li>\n</ol>\n<ul>\n<li>打开密钥文件 (C:/Users/your_name/.ssh)</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> ~/.ssh/id_rsa_b.pub</pre></td></tr></table></figure><blockquote>\n<p>将里面的内容全部复制</p>\n</blockquote>\n<ul>\n<li>登录到 GitHub 账号 B，进入  <code>“Settings” -&gt; “SSH and GPG keys” -&gt; “New SSH key”</code> ，将公钥粘贴进去并保存</li>\n</ul>\n<h2 id=\"配置本地git以使用新的ssh密钥对\"><a class=\"anchor\" href=\"#配置本地git以使用新的ssh密钥对\">#</a> 配置本地 Git 以使用新的 SSH 密钥对</h2>\n<p>在本地创建一个配置文件（例如 config），在其中添加多个账号的 SSH 配置信息。每个账号的配置信息应该以 Host 开头，后面跟着对应的域名和密钥路径</p>\n<ol>\n<li>创建  <code>config</code>  配置文件</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">touch</span> ~/.ssh/config</pre></td></tr></table></figure><blockquote>\n<p>无需后缀</p>\n</blockquote>\n<ol start=\"2\">\n<li><code>config</code>  文件内容</li>\n</ol>\n<pre><code># Account A\nHost github.com-AccountA\n    HostName github.com\n    User git\n    IdentityFile ~/.ssh/id_rsa_a\n\n# Account B\nHost github.com-AccountB\n    HostName github.com\n    User git\n    IdentityFile ~/.ssh/id_rsa_b\n</code></pre>\n<blockquote>\n<p><code>Account-B</code>  为你要切换时使用的账号名称</p>\n</blockquote>\n<h2 id=\"尝试添加git仓库\"><a class=\"anchor\" href=\"#尝试添加git仓库\">#</a> 尝试添加 git 仓库</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> config user.name <span class=\"token string\">'AccountB'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> config user.email <span class=\"token string\">'AccountB@mail.com'</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Switch to account A</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> remote set-url origin git@github.com-AccountA:usernameA/repo.git</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># Switch to account B</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">git</span> remote set-url origin git@github.com-AccountB:usernameB/repo.git</pre></td></tr></table></figure><blockquote>\n<p><code>AccountB</code>  替换为你实际要切换到的账号名<br />\n <code>usernameB</code>  替换为该账号下的用户名<br />\n <code>repo</code>  替换为你要切换到的仓库名</p>\n</blockquote>\n<p>最后验证远程仓库是否已成功添加</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 本地仓库情况</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> remote <span class=\"token parameter variable\">-v</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 全局登录情况</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-T</span> git@github.com-AccountB.com</pre></td></tr></table></figure><blockquote>\n<p>显示所有已添加的远程仓库及其对应的 URL</p>\n</blockquote>\n<h2 id=\"git-push\"><a class=\"anchor\" href=\"#git-push\">#</a> git push</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> init</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-am</span> <span class=\"token string\">\"first commit\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin git@AccountB:usernameB/repo.git</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">git</span> push <span class=\"token parameter variable\">-u</span> origin master</pre></td></tr></table></figure><h1 id=\"遇到的问题\"><a class=\"anchor\" href=\"#遇到的问题\">#</a> 遇到的问题</h1>\n<p><code>error: remote origin already exists</code> <br />\n 这个错误表示远程仓库 &quot;origin&quot; 已经存在。可能原因有：</p>\n<ul>\n<li>没有成功配置 SSH 到 GitHub 账号上</li>\n<li>已经添加过该仓库</li>\n</ul>\n<h2 id=\"解决方法\"><a class=\"anchor\" href=\"#解决方法\">#</a> 解决方法</h2>\n<ol>\n<li>重新配置。<strong>请确保每一步骤准确，文件配置恰当</strong></li>\n<li>删除并重新添加远程仓库</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> remote remove origin</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin git@github.com-AccountB:usernameB/repo.git</pre></td></tr></table></figure>",
            "tags": [
                "Github",
                "Configuration"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2024/08/13/0_100/15_CloudFlareVPN/",
            "url": "https://blog.neonnoir.link/2024/08/13/0_100/15_CloudFlareVPN/",
            "title": "使用CloudFlare作为VPN",
            "date_published": "2024-08-13T12:08:26.000Z",
            "content_html": "<h1 id=\"方式\"><a class=\"anchor\" href=\"#方式\">#</a> 方式</h1>\n<p>本文主要介绍以下两种方式</p>\n<ol>\n<li>CloudFlare 子服务 Warp (<a href=\"https://1.1.1.1/\">1.1.1.1</a>)</li>\n<li>使用 CloudFlare Workes 搭建 VPN 通道</li>\n</ol>\n<blockquote>\n<p>CLoudFlare 牛 bi！</p>\n</blockquote>\n<h1 id=\"1111\"><a class=\"anchor\" href=\"#1111\">#</a> 1.1.1.1</h1>\n<h2 id=\"下载\"><a class=\"anchor\" href=\"#下载\">#</a> 下载</h2>\n<p>点击<a href=\"https://1.1.1.1/\"> warp 官网</a>，下载对应设备的版本</p>\n<blockquote>\n<p>支持 Linux、MacOS、Windows、Android、IOS</p>\n</blockquote>\n<h2 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h2>\n<blockquote>\n<p>本文使用 Windows 的 Warp 功能，其他设备也都差不多</p>\n</blockquote>\n<p>点击 设置 --&gt; 偏好设置 --&gt; 账户 --&gt; 使用其他密钥<br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/15_/15_02.png\" alt=\"02\" /><br />\n 这里可以使用我的密钥，或是自己生成一个 (下文)</p>\n<pre><code>6ECl4z19-y0M862qC-A7490TKI\n</code></pre>\n<h2 id=\"密钥生成\"><a class=\"anchor\" href=\"#密钥生成\">#</a> 密钥生成</h2>\n<p>需要 Telegram 账号，如果没有请注册一个</p>\n<blockquote>\n<p>Telegram 需要魔法上网，这里建议直接使用上面我提供的密钥即可</p>\n</blockquote>\n<p>Robot: <a href=\"https://t.me/generatewarpplusbot\">https://t.me/generatewarpplusbot</a><br />\n 添加机器人，并按如图所操作</p>\n<blockquote>\n<p>请注意！这里可能需要让你关注些群聊才能使用</p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/15_/15_03.png\" alt=\"03\" /><br />\n <code>7lnfW439-3yX5C4m6-CXd5943m</code>  就是我们生成的密钥了，接下来复制到 Warp 即可使用<br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/15_/15_04.png\" alt=\"04\" /></p>\n<h2 id=\"无法连接\"><a class=\"anchor\" href=\"#无法连接\">#</a> 无法连接</h2>\n<ol>\n<li><s>优选 IP</s> (Ipv4 基本失效)</li>\n<li>换 Ipv6</li>\n<li>开启 MASQUE 加密协议 (部分地区不可用)</li>\n</ol>\n<p><s>目前 (2024/08/13) Warp 在部分地区的 Ipv4 无法连接，最简单的解决方法就是切换为 Ipv6</s></p>\n<blockquote>\n<p>自己上网搜索一下如何开启 Ipv6，本文不作解释</p>\n</blockquote>\n<h3 id=\"masque-加密协议\"><a class=\"anchor\" href=\"#masque-加密协议\">#</a> MASQUE 加密协议</h3>\n<p>此方法需要最新的 <a href=\"https://1.1.1.1/\">Warp</a></p>\n<h4 id=\"cloudflare-zero-trust\"><a class=\"anchor\" href=\"#cloudflare-zero-trust\">#</a> Cloudflare Zero Trust</h4>\n<p>在设置中心，开启 MASQUE 加密</p>\n<h4 id=\"windows\"><a class=\"anchor\" href=\"#windows\">#</a> Windows</h4>\n<p>在 <code>C:\\ProgramData\\Cloudflare\\</code>  内，新建 <code>mdm.yml</code>  内容如下</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;dict<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    &lt;key<span class=\"token punctuation\">></span>warp_tunnel_protocol&lt;/key<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    &lt;string<span class=\"token punctuation\">></span>masque&lt;/string<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&lt;/dict<span class=\"token punctuation\">></span></pre></td></tr></table></figure><p>重启 Warp 即可开启 MASQUE</p>\n<h4 id=\"macos\"><a class=\"anchor\" href=\"#macos\">#</a> MacOS</h4>\n<p>下载并安装 <a href=\"https://wwqe.lanzouo.com/iLoHz2bo35de\">CloudflareWARP.mobileconfig</a> 文件，请确保客户端版本为最新 2024.8.309.1 或 更高的版本</p>\n<blockquote>\n<p>密码: ebjy</p>\n</blockquote>\n<h4 id=\"移动设备androidios\"><a class=\"anchor\" href=\"#移动设备androidios\">#</a> 移动设备 (Android,IOS)</h4>\n<p>高级 -&gt; 连接选项 -&gt; TunnelProtocol (连接隧道) -&gt; MASQUE</p>\n<blockquote>\n<p>如果以上方法都不行，请继续往下看</p>\n</blockquote>\n<h1 id=\"cloudflare-workes\"><a class=\"anchor\" href=\"#cloudflare-workes\">#</a> CloudFlare Workes</h1>\n<p>每天免费 10w 个请求，可以绑定自己的域名，可以访问外网，可以反代理外网的接口<br />\n这里选择的是 <code>yonggekkk</code>  的脚本<a href=\"https://github.com/yonggekkk/Cloudflare_vless_trojan\"> Cloudflare_vless_trojan</a></p>\n<blockquote>\n<p>原项目<a href=\"https://github.com/zizifn/edgetunnel\"> edgetunnel</a>、<s>改版<a href=\"https://github.com/3Kmfi6HP/EDtunnel\"> EDtunnel</a></s>、Trojan<a href=\"https://github.com/ca110us/epeius\">epeius</a><br />\n 选择<a href=\"https://github.com/yonggekkk/Cloudflare_vless_trojan\"> Cloudflare_vless_trojan</a> 的理由是将项目的优点都整合到了一起，并且有很多相关的解释对于小白来讲很友好。</p>\n</blockquote>\n<h2 id=\"前置条件\"><a class=\"anchor\" href=\"#前置条件\">#</a> 前置条件</h2>\n<ol>\n<li><a href=\"https://dash.cloudflare.com/\">CloudFlare</a></li>\n<li><a href=\"https://github.com/2dust/v2rayN/releases?after=3.10\">V2ray</a></li>\n<li>域名 (可选)</li>\n</ol>\n<h2 id=\"使用脚本\"><a class=\"anchor\" href=\"#使用脚本\">#</a> 使用脚本</h2>\n<p>下文以无域名操作<br />\n下面将以最简单的方式使用此脚本 (无域名操作)，更多扩展操作可看原项目</p>\n<blockquote>\n<p>有无域名的区别 --&gt; 有无 Tls</p>\n</blockquote>\n<h3 id=\"新建workers\"><a class=\"anchor\" href=\"#新建workers\">#</a> 新建 Workers</h3>\n<p>名字随意<br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/15_/15_05.png\" alt=\"05\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/15_/15_06.png\" alt=\"06\" /></p>\n<h3 id=\"添加脚本\"><a class=\"anchor\" href=\"#添加脚本\">#</a> 添加脚本</h3>\n<p>打开项目仓库中的<a href=\"https://github.com/yonggekkk/Cloudflare_vless_trojan/blob/main/Vless_workers_pages/_worker.js\"> Vless_workers_pages</a> 文件夹内找到 <code>_worker.js</code>  将里面的内容 <code>CTRL+A</code>  复制进刚才创建的 Workers 里<br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/15_/15_07.png\" alt=\"07\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/15_/15_08.png\" alt=\"08\" /></p>\n<h3 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h3>\n<h4 id=\"userid\"><a class=\"anchor\" href=\"#userid\">#</a> userID</h4>\n<p>你应该确保有自己的 userID<br />\n 可以选择网上的<a href=\"https://www.uuidgenerator.net/\">在线生成</a>，或是在 V2 里的添加服务器内自动生成<br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/15_/15_09.png\" alt=\"09\" /></p>\n<h4 id=\"proxyip\"><a class=\"anchor\" href=\"#proxyip\">#</a> ProxyIP</h4>\n<p>这是全局代理 IP，选择默认的即可</p>\n<blockquote>\n<p>不会设别乱设，可能会导致无法进去 CloudFlare 相关的网站</p>\n</blockquote>\n<h3 id=\"运行\"><a class=\"anchor\" href=\"#运行\">#</a> 运行</h3>\n<p>然后点击右上角的部署保存<br />\n在 URL 中输入 <code>https://你的Workers名.你的用户名.workers.dev/你的UID</code></p>\n<blockquote>\n<p>如我的 <code>https://v2vpn.ui123456ax.workers.dev/a52c418e-a7d7-4d23-a348-1e055c1cb806</code></p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/15_/15_10.png\" alt=\"10\" title=\"默认关闭TLS\" /><br />\n 复制链接后，导入至 V2ray 即可正常使用。</p>\n<blockquote>\n<p>V2 节点这里就不分享给大家了，每个账户的请求数量是有限 10w 次的</p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/15_/15_11.png\" alt=\"11\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/15_/15_12.png\" alt=\"12\" /></p>\n<h3 id=\"无法打开workers\"><a class=\"anchor\" href=\"#无法打开workers\">#</a> 无法打开 Workers</h3>\n<blockquote>\n<p>如无此问题，跳过即可</p>\n</blockquote>\n<p>在上一步操作中无法打开输入的 <code>https://你的Workers名.你的用户名.workers.dev/你的UID</code>  链接<br />\n通常是因为 <code>.workers.dev</code>  被墙了，要么科学上网，要么手动开启 CF 节点</p>\n<h4 id=\"手动输入cf节点\"><a class=\"anchor\" href=\"#手动输入cf节点\">#</a> 手动输入 CF 节点</h4>\n<p>在 V2rayN 中添加 <code>VLESS</code>  服务器，并按如图所设置<br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/15_/15_13.png\" alt=\"13\" /><br />\n 设置完毕即可正常打开网页。这里是属于配置节点，可以正常科学上网了</p>\n<h3 id=\"其他代理工具\"><a class=\"anchor\" href=\"#其他代理工具\">#</a> 其他代理工具</h3>\n<p>在部署的 Workes 中可以看到，支持 Clash-meta、Sing-box 等链接导入</p>\n<blockquote>\n<p>导入时需保持科学环境，否则可能导致导入失败</p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/15_/15_14.png\" alt=\"14\" /></p>\n<h2 id=\"tls\"><a class=\"anchor\" href=\"#tls\">#</a> TLS</h2>\n<p>未添加域名使用 TLS 加密，可以在代理工具内设置里启用分片 (Fragment)</p>\n<blockquote>\n<p>没有的话，请更换你的代理工具 (v2rayN)，或更新你的代理工具</p>\n</blockquote>\n<p>延迟 (ms) 默认显示是 <code>-1</code>  但可以使用 (速度由 Address 决定)</p>\n<blockquote>\n<p>需要显示为非 <code>-1</code>  则需要使用域名</p>\n</blockquote>\n<p>如果是 <code>其他项目里的脚本</code> 默认是开启 TLS，可手动关闭节点 TLS</p>\n<h2 id=\"地址address\"><a class=\"anchor\" href=\"#地址address\">#</a> 地址 (Address)</h2>\n<p>请注意你的服务器地址选项 这将会影响你是否可以上网 以及上网的速度 (下文优选 IP 有提)</p>\n<blockquote>\n<p>填入 IP 或 使用了 CloudFlare 加速的域名</p>\n</blockquote>\n<p>默认使用</p>\n<pre><code>www.visa.com.hk\nwww.visa.com.sg\nip.sb\n...\n</code></pre>\n<h2 id=\"proxyip-2\"><a class=\"anchor\" href=\"#proxyip-2\">#</a> ProxyIP</h2>\n<p>设置 ProxyIP 的作用，就是保证能与 CloudFlare 的连通。说白了，不设置 ProxyIP 将无法连接与 CloudFlare 相关的网站 (包括使用了 CFCDN 的网站)，不影响上网速度。一般情况默认即可 (非空)，无需修改。</p>\n<pre><code>cdn-all.xn--b6gac.eu.org\ncdn.xn--b6gac.eu.org\ncdn-b100.xn--b6gac.eu.org\nedgetunnel.anycast.eu.org\ncdn.anycast.eu.org\n</code></pre>\n<h2 id=\"优选ip域名\"><a class=\"anchor\" href=\"#优选ip域名\">#</a> 优选 IP (域名)</h2>\n<p>不管你是使用哪个项目的代码搭建 CloudFlareV2ray 渠道，都应该要注意地址 (address)，这将影响全局上网的速度。</p>\n<ol>\n<li>CloudFlare 优选官方 IP --&gt; <a href=\"https://github.com/yonggekkk/Cloudflare_vless_trojan/blob/main/CF%E4%BC%98%E9%80%89%E5%AE%98%E6%96%B9IP(%E7%94%B5%E8%84%91%E7%89%88).zip\">下载</a></li>\n</ol>\n<blockquote>\n<p>速度一般 节点稳定 IP 地域大部分为美国</p>\n</blockquote>\n<ol start=\"2\">\n<li>CloudFlare 优选反代 IP --&gt; <a href=\"https://github.com/yonggekkk/Cloudflare_vless_trojan/blob/main/CF%E4%BC%98%E9%80%89%E5%8F%8D%E4%BB%A3IP(%E7%94%B5%E8%84%91%E7%89%88).zip\">下载</a></li>\n</ol>\n<blockquote>\n<p>速度快 不稳定容易失效 IP 地域可根据节点选择</p>\n</blockquote>\n<ol start=\"3\">\n<li>CloudFlare 优选域名 (官方、反代) --&gt; <a href=\"https://github.com/yonggekkk/Cloudflare_vless_trojan/blob/main/CDN%E4%BC%98%E9%80%89%E5%9F%9F%E5%90%8DV23.8.18(%E7%94%B5%E8%84%91win64).exe\">下载</a></li>\n</ol>\n<blockquote>\n<p>IP 会随意变动</p>\n</blockquote>\n<h3 id=\"androidios\"><a class=\"anchor\" href=\"#androidios\">#</a> Android&amp;&amp;IOS</h3>\n<p>Android 使用程序 <code>termux</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 安装依赖</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pkg upgrade</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pkg <span class=\"token function\">install</span> <span class=\"token function\">curl</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># apt update</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># apt install curl</span></pre></td></tr></table></figure><p>IOS 使用程序 <code>ish</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 安装依赖</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>apk <span class=\"token function\">add</span> openssh <span class=\"token function\">curl</span> <span class=\"token function\">bash</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 优选域名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-sSL</span> https://gitlab.com/rwkgyg/CFwarp/raw/main/point/CFcdnym.sh <span class=\"token parameter variable\">-o</span> CFcdnym.sh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">chmod</span> +x CFcdnym.sh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">bash</span> CFcdnym.sh</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 优选 IP</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-sSL</span> https://gitlab.com/rwkgyg/CFwarp/raw/main/point/cfip.sh <span class=\"token parameter variable\">-o</span> cfip.sh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">chmod</span> +x cfip.sh <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">bash</span> cfip.sh</pre></td></tr></table></figure><h3 id=\"抓取反代ip\"><a class=\"anchor\" href=\"#抓取反代ip\">#</a> 抓取反代 IP</h3>\n<p>可利用网络空间检索抓取有 CF 加速的网站<br />\n FOFA  <code>server==&quot;cloudflare&quot; &amp;&amp; port==&quot;端口&quot; &amp;&amp; country==&quot;国家&quot;</code></p>\n<p>CloudFlare 支持的 13 个端口号</p>\n<details><summary>HTTP端口(7个)</summary><div>\n<ul>\n<li>80</li>\n<li>8080</li>\n<li><strong>8880</strong></li>\n<li>2052</li>\n<li>2082</li>\n<li>2086</li>\n<li>2095</li>\n</ul>\n</div></details>\n<details><summary>HTTPS端口(6个)</summary><div>\n<ul>\n<li>443</li>\n<li>2053</li>\n<li>2083</li>\n<li>2087</li>\n<li>2096</li>\n<li><strong>8443</strong></li>\n</ul>\n</div></details>\n<h3 id=\"区别\"><a class=\"anchor\" href=\"#区别\">#</a> 区别</h3>\n<ul>\n<li>域名：优选域名里包含许多优选 IP，并使用其中的一条 IP 作为连接 CloudFlare 的通道</li>\n<li>IP: 优选 IP 则是指定唯一的 IP，这将可以选择 VPN 所在的代理位置</li>\n</ul>\n<blockquote>\n<p>一般情况选择优选域名即可</p>\n</blockquote>\n<h1 id=\"结语\"><a class=\"anchor\" href=\"#结语\">#</a> 结语</h1>\n<p>无论是所以 Warp 服务还是自建 Workes，其根 IP 都是 CloudFlare，其速度也相差无几。</p>\n<blockquote>\n<p>速度的差异主要还是在与 CloudFlare 的连接</p>\n</blockquote>\n<hr />\n<p><a href=\"https://www.youtube.com/watch?v=ojGojtF8sW8&amp;t=1471s\">https://www.youtube.com/watch?v=ojGojtF8sW8&amp;t=1471s</a><br />\n<a href=\"https://www.youtube.com/watch?v=NbruiJShUCE\">https://www.youtube.com/watch?v=NbruiJShUCE</a><br />\n<a href=\"https://www.youtube.com/watch?v=FE_gJrk2sSc&amp;t=812s\">https://www.youtube.com/watch?v=FE_gJrk2sSc&amp;t=812s</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=NaLd-orwFUE\">https://www.youtube.com/watch?v=NaLd-orwFUE</a><br />\n<a href=\"https://www.youtube.com/watch?v=9V9CQxmfwoA\">https://www.youtube.com/watch?v=9V9CQxmfwoA</a></p>\n<p><a href=\"https://github.com/yonggekkk/warp-yg\">https://github.com/yonggekkk/warp-yg</a></p>\n<p><a href=\"https://github.com/yonggekkk/Cloudflare_vless_trojan\">https://github.com/yonggekkk/Cloudflare_vless_trojan</a><br />\n<a href=\"https://github.com/zizifn/edgetunnel\">https://github.com/zizifn/edgetunnel</a><br />\n<a href=\"https://github.com/3Kmfi6HP/EDtunnel\">https://github.com/3Kmfi6HP/EDtunnel</a> 已删库<br />\n<a href=\"https://github.com/EDtunnel-rev/EDtunnel-rev\"> https://github.com/EDtunnel-rev/EDtunnel-rev</a><br />\n<a href=\"https://github.com/ca110us/epeius\">https://github.com/ca110us/epeius</a></p>\n<p><a href=\"https://github.com/XIU2/CloudflareSpeedTest\">https://github.com/XIU2/CloudflareSpeedTest</a><br />\n<a href=\"https://github.com/badafans/Cloudflare-IP-SpeedTest\">https://github.com/badafans/Cloudflare-IP-SpeedTest</a></p>\n",
            "tags": [
                "CloudFlare",
                "VPN"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2024/08/02/0_100/14_ADB-%E5%91%BD%E4%BB%A4/",
            "url": "https://blog.neonnoir.link/2024/08/02/0_100/14_ADB-%E5%91%BD%E4%BB%A4/",
            "title": "ADB-命令",
            "date_published": "2024-08-02T08:36:09.000Z",
            "content_html": "<h1 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h1>\n<p>AndroidDebugBridge 下载地址：</p>\n<ul>\n<li><a href=\"https://dl.google.com/android/repository/platform-tools-latest-windows.zip\">Windows</a></li>\n<li><a href=\"https://developer.android.com/studio\">Mac</a></li>\n<li><a href=\"https://dl.google.com/android/repository/platform-tools-latest-linux.zip\">Linux</a></li>\n</ul>\n<p>如有需要，请自行配置系统环境 Patch 变量</p>\n<h1 id=\"连接设备\"><a class=\"anchor\" href=\"#连接设备\">#</a> 连接设备</h1>\n<p>选定设备后再进行操作</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb deviecs</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># xxx:5555 device</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>adb <span class=\"token parameter variable\">-s</span> xxx:5555 <span class=\"token operator\">&lt;</span>command<span class=\"token operator\">></span> <span class=\"token comment\"># 使用参数指定设备</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>adb connect xxx:5555 <span class=\"token comment\"># 连接设备 连接后不再需要 -s 指定目标</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>adb disconnect xxx:5555 <span class=\"token comment\"># 断开连接</span></pre></td></tr></table></figure><h1 id=\"命令\"><a class=\"anchor\" href=\"#命令\">#</a> 命令</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb start-server <span class=\"token comment\"># 开启 adb 服务</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>adb kill-serveradb <span class=\"token comment\"># 结束 adb 服务</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>adb shell <span class=\"token function\">ps</span> <span class=\"token comment\"># 查看进程</span></pre></td></tr></table></figure><h2 id=\"文件管理\"><a class=\"anchor\" href=\"#文件管理\">#</a> 文件管理</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb pull 设备文件路径 本地文件路径</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>adb push 本地文件路径 设备文件路径</pre></td></tr></table></figure><h3 id=\"文件操作\"><a class=\"anchor\" href=\"#文件操作\">#</a> 文件操作</h3>\n<p>这里和 Linux 基本相同了</p>\n<h4 id=\"查看文件夹\"><a class=\"anchor\" href=\"#查看文件夹\">#</a> 查看文件夹</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb shell <span class=\"token builtin class-name\">pwd</span> <span class=\"token comment\"># 输出当前目录路径</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>adb shell <span class=\"token function\">ls</span> 设备文件夹路径 <span class=\"token comment\"># 列出目录下的文件和文件夹</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 加参</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-a</span> <span class=\"token comment\"># 列出隐藏文件</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-s</span> <span class=\"token comment\"># 列出文件大小</span></pre></td></tr></table></figure><h4 id=\"打开文件夹\"><a class=\"anchor\" href=\"#打开文件夹\">#</a> 打开文件夹</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb shell <span class=\"token builtin class-name\">cd</span> 设备文件夹路径</pre></td></tr></table></figure><h4 id=\"删除文件夹\"><a class=\"anchor\" href=\"#删除文件夹\">#</a> 删除文件 (夹)</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb shell <span class=\"token function\">rm</span> 设备文件路径</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 加参</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> <span class=\"token comment\"># 强制删除文件，系统不提示</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-r</span> <span class=\"token comment\"># 强制删除指定目录中的所有文件和子目录</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-i</span> <span class=\"token comment\"># 交互式删除，删除前提示</span></pre></td></tr></table></figure><h4 id=\"创建文件夹\"><a class=\"anchor\" href=\"#创建文件夹\">#</a> 创建文件夹</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb shell <span class=\"token function\">mkdir</span> 设备文件夹路径</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 加参</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-m</span> <span class=\"token comment\"># 赋予读写权限</span></pre></td></tr></table></figure><h4 id=\"操控文件位置\"><a class=\"anchor\" href=\"#操控文件位置\">#</a> 操控文件位置</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb shell <span class=\"token function\">cp</span> 源文件路径 目标路径 <span class=\"token comment\"># 复制</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>adb shell <span class=\"token function\">mv</span> 源文件路径 目标路径 <span class=\"token comment\"># 移动</span></pre></td></tr></table></figure><h2 id=\"设备信息\"><a class=\"anchor\" href=\"#设备信息\">#</a> 设备信息</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb shell getprop ro.product.model <span class=\"token comment\"># 获取 设备型号</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>adb shell getprop ro.build.version.release <span class=\"token comment\"># 获取 Android 系统版本</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>adb get-serialno <span class=\"token comment\"># 获取 序列号</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>adb shell wm size <span class=\"token comment\"># 获取 屏幕分辨率</span></pre></td></tr></table></figure><h2 id=\"app管理\"><a class=\"anchor\" href=\"#app管理\">#</a> APP 管理</h2>\n<p>查看 App</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb shell pm list packages <span class=\"token comment\"># 查看设备已有的程序列表</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># packge:com.xxx.xxx</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 加参</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pm list package <span class=\"token parameter variable\">-s</span> <span class=\"token comment\"># 列出系统应用</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>pm list package <span class=\"token parameter variable\">-3</span> <span class=\"token comment\"># 列出第三方的应用</span></pre></td></tr></table></figure><p>安装 App</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb <span class=\"token function\">install</span> 本地文件路径/xx.apk</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>adb <span class=\"token function\">install</span> <span class=\"token parameter variable\">-r</span> 本地文件路径/xx.apk <span class=\"token comment\"># 覆盖安装 App</span></pre></td></tr></table></figure><p>卸载 App</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb uninstall com.xxx.xxx</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>adb uninstall <span class=\"token parameter variable\">-k</span> com.xxx.xxx <span class=\"token comment\"># 保留数据和缓存目录</span></pre></td></tr></table></figure><h2 id=\"设备操作\"><a class=\"anchor\" href=\"#设备操作\">#</a> 设备操作</h2>\n<h3 id=\"系统相关\"><a class=\"anchor\" href=\"#系统相关\">#</a> 系统相关</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb <span class=\"token function\">reboot</span> <span class=\"token comment\"># 重启</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>adb <span class=\"token function\">reboot</span> recovery <span class=\"token comment\"># Recovery 模式</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>adb <span class=\"token function\">reboot</span> bootloader <span class=\"token comment\"># Fastboot 模式</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>adb root <span class=\"token comment\"># 获取 root 权限</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>adb remount <span class=\"token comment\"># 重新挂载系统分区</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>adb shell <span class=\"token comment\"># 进入 shell 模式</span></pre></td></tr></table></figure><h3 id=\"基础操作\"><a class=\"anchor\" href=\"#基础操作\">#</a> 基础操作</h3>\n<h4 id=\"截图\"><a class=\"anchor\" href=\"#截图\">#</a> 截图</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb shell screencap <span class=\"token parameter variable\">-p</span> 设备文件路径.png</pre></td></tr></table></figure><h4 id=\"录屏\"><a class=\"anchor\" href=\"#录屏\">#</a> 录屏</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb shell screenrecord 设备文件路径.mp4</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># Ctrl-C 停止录屏</span></pre></td></tr></table></figure><h4 id=\"wifi\"><a class=\"anchor\" href=\"#wifi\">#</a> WIFI</h4>\n<p>设备需获取  <code>root</code>  权限</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb shell svc wifi <span class=\"token builtin class-name\">enable</span> <span class=\"token comment\"># 开启</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>adb shell svc wifi disable <span class=\"token comment\"># 关闭</span></pre></td></tr></table></figure><h3 id=\"模拟按键\"><a class=\"anchor\" href=\"#模拟按键\">#</a> 模拟按键</h3>\n<p><code>adb shell input</code> <br />\n<s> 目前用不到，以后再写</s></p>\n<hr />\n<p>参考文章：<br />\n<a href=\"https://blog.csdn.net/lb245557472/article/details/84068519\">https://blog.csdn.net/lb245557472/article/details/84068519</a><br />\n<a href=\"https://cloud.tencent.com/developer/article/2342099\">https://cloud.tencent.com/developer/article/2342099</a><br />\n<a href=\"https://www.cnblogs.com/wutou/p/17930583.html\">https://www.cnblogs.com/wutou/p/17930583.html</a></p>\n",
            "tags": [
                "Notes",
                "Android"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2024/07/30/0_100/13_Android%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E4%B8%8A%E7%BD%91/",
            "url": "https://blog.neonnoir.link/2024/07/30/0_100/13_Android%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E4%B8%8A%E7%BD%91/",
            "title": "Android抓包工具无法正常上网",
            "date_published": "2024-07-30T01:28:48.000Z",
            "content_html": "<h1 id=\"问题\"><a class=\"anchor\" href=\"#问题\">#</a> 问题</h1>\n<p>连上抓包工具之后无法连接网络，网站提示证书安全问题、App 无法正常使用等。通常是 SSL 返回时证书的问题:<br />\nAndroid 系统将 CA 证书又分为两种， <code>用户CA证书</code> 和  <code>系统CA证书</code> 。<br />\n顾明思议，用户 CA 证书是由用户自行安装的，系统 CA 证书是由系统内置的，很明显后者更加真实有效。<br />\n而我们要做的无非就是<strong>将证书导入至系统 CA 证书</strong>当中，或是<strong>绕过系统 CA 证书的检测</strong></p>\n<blockquote>\n<p>系统 CA 证书存储路径:  <code>/system/etc/security/cacerts/</code></p>\n</blockquote>\n<h1 id=\"解决\"><a class=\"anchor\" href=\"#解决\">#</a> 解决</h1>\n<p>所需工具</p>\n<ul>\n<li>OpneSSL</li>\n<li>AndroidDebugBridge</li>\n<li>Xposed</li>\n<li>JustTrustMe 模块</li>\n</ul>\n<h2 id=\"导入-import\"><a class=\"anchor\" href=\"#导入-import\">#</a> 导入 Import</h2>\n<h3 id=\"下载工具\"><a class=\"anchor\" href=\"#下载工具\">#</a> 下载工具</h3>\n<ul>\n<li>OpenSSL 下载地址: <a href=\"https://slproweb.com/products/Win32OpenSSL.html\">https://slproweb.com/products/Win32OpenSSL.html</a></li>\n</ul>\n<blockquote>\n<p>本文使用版本  <code>Win64 OpenSSL v3.3.1</code>  下载最新版亦可</p>\n</blockquote>\n<ul>\n<li>AndroidDebugBridge 下载地址: <a href=\"https://adbdownload.com/\">https://adbdownload.com/</a></li>\n</ul>\n<blockquote>\n<p>本文使用版本  <code>R35.0.0</code>  下载最新版亦可</p>\n</blockquote>\n<p>如有需要可自行配置系统环境变量  <code>Path</code></p>\n<h3 id=\"转换证书\"><a class=\"anchor\" href=\"#转换证书\">#</a> 转换证书</h3>\n<p>使用  <code>openssl</code>  将证书转为  <code>xx.0</code>  证书文件</p>\n<ol>\n<li>获取证书文件的哈希值</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># cer 证书文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>openssl x509 <span class=\"token parameter variable\">-inform</span> DER <span class=\"token parameter variable\">-subject_hash_old</span> <span class=\"token parameter variable\">-in</span> xxxx.cer</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># pem 证书文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>openssl x509 <span class=\"token parameter variable\">-inform</span> PEM <span class=\"token parameter variable\">-subject_hash_old</span> <span class=\"token parameter variable\">-in</span> xxxx.pem</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/13_/13_01.png\" alt=\"00\" /></p>\n<ol>\n<li>生成  <code>.0</code>  证书文件</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># cer 证书文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>openssl x509 <span class=\"token parameter variable\">-inform</span> DER <span class=\"token parameter variable\">-text</span> <span class=\"token parameter variable\">-in</span> xxxx.cer <span class=\"token operator\">></span> 哈希值.0</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># pem 证书文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>openssl x509 <span class=\"token parameter variable\">-inform</span> PEM <span class=\"token parameter variable\">-text</span> <span class=\"token parameter variable\">-in</span> xxxx.pem <span class=\"token operator\">></span> 哈希值.0</pre></td></tr></table></figure><h3 id=\"导入证书\"><a class=\"anchor\" href=\"#导入证书\">#</a> 导入证书</h3>\n<p>两种方法，任意即可</p>\n<ol>\n<li>复制文件<br />\n Root 设备后，使用 MT 管理器 或 其他文件管理器 将下载的证书  <code>xx.0</code>  复制至系统  <code>/system/etc/security/cacerts/</code>  目录</li>\n<li>ADB 导入</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb root</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>adb shell avbctl disable-verification</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>adb remount</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># adb push 本地文件路径 Android 文件路径</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>adb push xx.0 /system/etc/security/cacerts/xx.0</pre></td></tr></table></figure><p>注意！一般 Root 之后便会开启  <code>system</code>  读写，但也有例外:<br />\n 如果是模拟器很可能是没有开启  <code>system</code>  写入，按下图开启即可 <s>被坑过 QwQ</s><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/13_/13_01.png\" alt=\"01\" title=\"雷电模拟器9\" /></p>\n<h2 id=\"绕过-bypass\"><a class=\"anchor\" href=\"#绕过-bypass\">#</a> 绕过 Bypass</h2>\n<h3 id=\"下载工具-2\"><a class=\"anchor\" href=\"#下载工具-2\">#</a> 下载工具</h3>\n<p>Magisk (任意即可):</p>\n<ul>\n<li>原版 (Magisk)：<a href=\"https://github.com/topjohnwu/Magisk/releases\">https://github.com/topjohnwu/Magisk/releases</a></li>\n<li>狐狸 (Kitsune Magisk)：<a href=\"https://huskydg.github.io/magisk-files/\">https://huskydg.github.io/magisk-files/</a></li>\n</ul>\n<blockquote>\n<p><code>Kitsune Magisk</code> <a href=\"https://blog.csdn.net/Ruaki/article/details/135580772\"> 下载教程</a></p>\n</blockquote>\n<p>JustTrustMe 模块下载地址: <a href=\"https://github.com/Fuzion24/JustTrustMe/releases/\">https://github.com/Fuzion24/JustTrustMe/releases/</a><br />\nXposed (任意即可):</p>\n<ul>\n<li>VirtualXposed 下载地址: <a href=\"https://virtualxposed.com/download/\">https://virtualxposed.com/download/</a></li>\n<li>LSPatch 下载地址: <a href=\"https://github.com/LSPosed/LSPatch/releases\">https://github.com/LSPosed/LSPatch/releases</a></li>\n<li>LSPosed 下载地址：<a href=\"https://github.com/LSPosed/LSPosed/releases/tag/v1.9.2\">https://github.com/LSPosed/LSPosed/releases/tag/v1.9.2</a></li>\n</ul>\n<blockquote>\n<p>本文以  <code>LSPosed + KitsuneMagisk</code>  介绍</p>\n</blockquote>\n<h3 id=\"原理\"><a class=\"anchor\" href=\"#原理\">#</a> 原理</h3>\n<p>利用 Xposed + JustTrustMe 模块，绕过 SSL 证书检测</p>\n<h3 id=\"lsposed安装\"><a class=\"anchor\" href=\"#lsposed安装\">#</a> LSPosed 安装</h3>\n<ol>\n<li>在  <code>Magisk</code>  设置中将  <code>Zygisk</code>  设项打开，将设备重启即可<br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/13_/13_02.png\" alt=\"02\" title=\"Kitsune Magisk\" /></li>\n<li>进入模块，选择从本地安装，选择  <code>LSPosed-v1.8.4-6609-zygisk-release.zip</code>  文件进行安装</li>\n</ol>\n<blockquote>\n<p><code>LSPosed-v1.8.4-6609-zygisk-release.zip</code>  请从官网下载，记住是<strong> zygisk</strong></p>\n</blockquote>\n<ol start=\"3\">\n<li>安装  <code>LSPosed.apk</code> ，打开 LSPosed 可以看到处于激活的状态</li>\n</ol>\n<blockquote>\n<p><code>LSPosed.apk</code>  这个我也没从 Github 上找到，不过在另一个网页上找到 <a href=\"https://www.downkuai.com/android/175025.html\">下载地址</a></p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/13_/13_03.png\" alt=\"03\" /></p>\n<h3 id=\"使用justtrustme模块\"><a class=\"anchor\" href=\"#使用justtrustme模块\">#</a> 使用 JustTrustMe 模块</h3>\n<p>完成 LSPosed 配置后，安装  <code>TrustMeAlready.apk</code> 。在 LSPosed 模块上点击  <code>JustTrustMe</code> ，选择需要抓包的 App (小黑盒)，重新设备启动即可。<br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/13_/13_04.png\" alt=\"04\" /></p>\n<hr />\n<p>此时便可愉快地抓包啦</p>\n",
            "tags": [
                "Configuration",
                "Android"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2024/07/10/0_100/11_BurpSuite/",
            "url": "https://blog.neonnoir.link/2024/07/10/0_100/11_BurpSuite/",
            "title": "BurpSuite使用指南",
            "date_published": "2024-07-10T06:58:50.000Z",
            "content_html": "<p>更新中～<br />\n 下载请自行上网搜索</p>\n<h1 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h1>\n<p>打开系统的设置页面，并在代理中手动开启并设置代理服务器<br />\n一般代理 ip 服务器为  <code>127.0.0.1</code> ，端口号为  <code>8080</code>  || 根据实际设置而定</p>\n<h2 id=\"edge浏览器\"><a class=\"anchor\" href=\"#edge浏览器\">#</a> Edge 浏览器</h2>\n<ol>\n<li>点击右上角的设置，并找到 Tools 中的 Proxy 项目<br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/11_/11_01.png\" alt=\"01\" /></li>\n<li>并在代理监听器中选择任意项导出 CA 证书，如下图<br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/11_/11_02.png\" alt=\"02\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/11_/11_03.png\" alt=\"03\" /></li>\n<li>找到 Edge 浏览器，并打开设置，将证书导入</li>\n</ol>\n<blockquote>\n<p>因本人用 Edge，其他浏览器请自行搜索</p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/11_/11_04.png\" alt=\"04\" /></p>\n<ol start=\"4\">\n<li>并在 Edge 的快捷方式中添加如下<br />\n <code>--test-type --ignore-certificate-errors</code> <br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/11_/11_05.png\" alt=\"05\" /></li>\n</ol>\n<h2 id=\"抓包数据中文乱码\"><a class=\"anchor\" href=\"#抓包数据中文乱码\">#</a> 抓包数据中文乱码</h2>\n<p>在设置中搜索  <code>User interface</code>  下滑更改 字体显示为  <code>宋体13pt</code>  字符集显示为  <code>UTF-8</code> <br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/11_/11_06.png\" alt=\"06\" /><br />\n 别忘了重启程序 w</p>\n<h2 id=\"抓包app\"><a class=\"anchor\" href=\"#抓包app\">#</a> 抓包 App</h2>\n<h3 id=\"模拟器手机\"><a class=\"anchor\" href=\"#模拟器手机\">#</a> 模拟器 (手机)</h3>\n<ol>\n<li>在 windows 运行 cmd 中输入  <code>ipconfig</code>  查看本地 ipv4 地址，在 Burp 设置里添加以本地 ip 的代理监听器</li>\n</ol>\n<blockquote>\n<p>我的本地 IP  <code>192.168.0.113</code> ，端口号随意填  <code>8080</code></p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/11_/11_07.png\" alt=\"07\" /><br />\n2. 打开模拟器 (手机)，输入本地 ip  <code>192.168.0.113</code> ，以及端口号  <code>8080</code> <br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/11_/11_08.png\" alt=\"08\" /></p>\n<blockquote>\n<p>注意 此时还未能抓包，需要安装证书</p>\n</blockquote>\n<ul>\n<li>在模拟器的浏览器内输入  <code>http://burp/</code> ，下载 CA 证书  <code>cacert.der</code> ，并在文件管理器中将其改为  <code>cacert.cer</code>  然后在设置内搜索  <code>从SD卡安装</code> 安装证书<br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/11_/11_09.png\" alt=\"09\" /></li>\n</ul>\n<blockquote>\n<p>使用雷电 9 等模拟器安装证书时无法安装，请看下方解决方法</p>\n</blockquote>\n<ul>\n<li>在 bp 中导出当前监听器的证书  <code>s.cer</code> ，然后并把该文件拖拽至模拟器程序上，此时默认安装即可<br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/11_/11_10.png\" alt=\"10\" /></li>\n</ul>\n<p><strong>补充</strong>：连上抓包工具之后无法连接网络，网站提示证书安全问题、App 无法正常使用等。请看 --&gt; <a href=\"https://neonnoir.us.kg/2024/07/30/0_100/13_Android%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E4%B8%8A%E7%BD%91/\">Android 抓包工具无法正常上网</a></p>\n<h3 id=\"本地抓包apk\"><a class=\"anchor\" href=\"#本地抓包apk\">#</a> 本地抓包 Apk</h3>\n<p>主要流程：</p>\n<ul>\n<li>配置 Android 子系统 --&gt; 本地安装 Apk 程序 --&gt; 打开抓包工具 --&gt; 即可抓取数据</li>\n</ul>\n<p>关于 win 安装 Apk 程序可以看下面的文章配置，写的很详细，非常不错</p>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_56076343/article/details/122334759\">Win11</a></li>\n<li><a href=\"https://www.bilibili.com/read/cv28566256/\">Win10</a></li>\n</ul>\n<p>安装完 apk 后，正常抓包即可 <s>这里就不再复述了</s></p>\n<h1 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h1>\n<p><s>暂时搁置，以后再写</s></p>\n<h1 id=\"扩展\"><a class=\"anchor\" href=\"#扩展\">#</a> 扩展</h1>\n<p>扩展的获取方法</p>\n<ol>\n<li>BApp Store<br />\nBurpSuite 扩展页面上的  <code>BAppStore</code> 。虽有丰富的扩展，但同时没点英文程度还是有点困难的</li>\n<li>浏览器 / Github 上搜索</li>\n<li><s>编写程序</s></li>\n</ol>\n<h2 id=\"turbo-intruder\"><a class=\"anchor\" href=\"#turbo-intruder\">#</a> Turbo Intruder</h2>\n<p><s>暂时搁置，以后再写</s></p>\n",
            "tags": [
                "Notes",
                "Configuration"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2024/05/10/0_100/09_RPGMV%E5%9C%A8IOS%E4%B8%8A%E6%97%A0%E6%B3%95%E8%BF%90%E8%A1%8Cogg%E6%96%87%E4%BB%B6/",
            "url": "https://blog.neonnoir.link/2024/05/10/0_100/09_RPGMV%E5%9C%A8IOS%E4%B8%8A%E6%97%A0%E6%B3%95%E8%BF%90%E8%A1%8Cogg%E6%96%87%E4%BB%B6/",
            "title": "修复RPGMV在IOS上无法运行ogg文件",
            "date_published": "2024-05-10T05:48:33.000Z",
            "content_html": "<p>Q: 为什么无法在播放声音？<br />\nA: 主要问题是 IOS 中播放音频一般情况下都是使用 AVPlayer，而 ogg 文件 AVPlayer 无法播放<br />\n Q: 换一个支持的浏览器播放器内核不就可以了吗？<br />\nA: IOS 政策不允许</p>\n<h1 id=\"安装-audiostream补丁\"><a class=\"anchor\" href=\"#安装-audiostream补丁\">#</a> 安装  <code>AudioStream</code>  补丁</h1>\n<p>链接：<a href=\"https://wwo.lanzouo.com/iC1OW1yaahzi\">https://wwo.lanzouo.com/iC1OW1yaahzi</a></p>\n<p>将以下文件导入到  <code>&lt;root&gt;/www/js/plugins</code>  文件夹下</p>\n<pre><code class=\"language-file\">`AudioStreaming.js`,\n`stbvorbis_stream.js`,\n`stbvorbis_stream_asm.js`.\n</code></pre>\n<h1 id=\"文件修改\"><a class=\"anchor\" href=\"#文件修改\">#</a> 文件修改</h1>\n<p>在  <code>&lt;root&gt;/www/js/plugins.js</code> , 添加以下代码于文件中:</p>\n<pre><code>&#123;&quot;name&quot;:&quot;AudioStreaming&quot;,&quot;status&quot;:true,&quot;description&quot;:&quot;音声読み込みを高速化し、oggファイルのみを使用します。&quot;,&quot;parameters&quot;:&#123;&quot;mode&quot;:&quot;10&quot;,&quot;deleteM4a&quot;:&quot;false&quot;&#125;&#125;,\n&#123;&quot;name&quot;:&quot;stbvorbis_stream&quot;,&quot;status&quot;:false,&quot;description&quot;:&quot;&quot;,&quot;parameters&quot;:&#123;&#125;&#125;,\n&#123;&quot;name&quot;:&quot;stbvorbis_stream_asm&quot;,&quot;status&quot;:false,&quot;description&quot;:&quot;&quot;,&quot;parameters&quot;:&#123;&#125;&#125;,\n</code></pre>\n<p>其实到这里就已经大功告成了，最后只需要启动便可<br />\n补丁来源于：<a href=\"http://onsplayer.cn/info/2371\">http://onsplayer.cn/info/2371</a></p>\n",
            "tags": [
                "Configuration"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2024/05/08/0_100/08_erogames/",
            "url": "https://blog.neonnoir.link/2024/05/08/0_100/08_erogames/",
            "title": "TESX-EROGAMES",
            "date_published": "2024-05-07T16:07:51.000Z",
            "content_html": "<p><s>和同学在校内游玩的小游戏</s></p>\n<h3 id=\"操作说明\"><a class=\"anchor\" href=\"#操作说明\">#</a> 操作说明</h3>\n<p>RPG 可自由操作时两指齐按（右鍵）打开功能表存档，部分需定点存档<br />\n IOS 音频已修正，但仍有部分游戏可能并无声音 <a href=\"https://ui123456ax.github.io/2024/05/10/0_100/09_RPGMV%E5%9C%A8IOS%E4%B8%8A%E6%97%A0%E6%B3%95%E8%BF%90%E8%A1%8Cogg%E6%96%87%E4%BB%B6/\">修复 RPGMV 在 IOS 上无法运行 ogg 文件</a></p>\n<p>无科学环境可能造成卡顿、画面加载不全等影响</p>\n<blockquote>\n<p>游戏于  <code>github page</code> , 如有需要可从<a href=\"https://github.com/u-yoai/\"> git 仓库</a>自行 Clone 本地</p>\n</blockquote>\n<h3 id=\"游戏列表\"><a class=\"anchor\" href=\"#游戏列表\">#</a> 游戏列表：</h3>\n<ul>\n<li><a href=\"https://erogames.us.kg/xrkxq/www/\">夏日狂想曲</a></li>\n<li><a href=\"https://erogames.us.kg/drkxq/www\">冬日狂想曲</a></li>\n<li><a href=\"https://erogames.us.kg/chdc/\">彼女と痴漢と満員電車</a></li>\n<li><s><a href=\"https://erogames.us.kg/csjy\">触手监狱</a></s> 可能无法加载 Data/_Translation.json 文件</li>\n<li><a href=\"https://erogames.us.kg/xzxrdbw/www\">寻找夏日的宝物</a> 生肉</li>\n<li><a href=\"https://erogames.us.kg/wlts/www\">无力天使</a> 生肉</li>\n<li><a href=\"https://erogames.us.kg/mfsnclx/\">魔法少女苍蓝星</a></li>\n<li><a href=\"https://erogames.us.kg/PrayGame/\">PrayGame</a></li>\n</ul>\n<p>・・・・待定</p>\n",
            "tags": [
                "Games"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2024/03/16/0_100/07_ComicU03/",
            "url": "https://blog.neonnoir.link/2024/03/16/0_100/07_ComicU03/",
            "title": "ERO Comic",
            "date_published": "2024-03-16T09:28:51.000Z",
            "content_html": "<p><img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/1.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/2.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/3.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/4.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/5.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/6.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/7.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/8.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/9.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/10.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/11.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/12.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/13.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/14.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/15.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/16.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/17.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/18.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/19.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/20.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/21.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/22.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/23.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/24.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/25.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/26.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/27.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/28.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/29.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/30.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/31.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/32.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/33.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/34.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/35.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/36.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/37.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/38.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/39.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/40.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/41.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/42.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/43.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/44.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/45.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/46.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/47.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/48.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/49.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/50.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/51.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/52.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/53.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/54.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/55.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/56.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/57.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/58.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/59.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/60.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/61.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/62.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/63.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/64.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/65.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/66.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/67.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/68.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/69.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/70.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/71.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/72.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/73.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/74.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/75.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/76.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/77.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/78.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/79.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/80.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/81.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/82.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/83.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/84.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/85.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/86.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/87.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/88.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/89.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/90.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/91.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/92.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/93.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/94.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/95.webp\" alt=\"\" /><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Caricature/porn_ero/U03/comic/96.webp\" alt=\"\" /></p>\n",
            "tags": [
                "Comic"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2023/08/12/0_100/05_%E5%85%B3%E4%BA%8EGithub-Actions%E4%BD%BF%E7%94%A8Python%E8%87%AA%E5%8A%A8%E5%8C%96%E6%97%B6%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/",
            "url": "https://blog.neonnoir.link/2023/08/12/0_100/05_%E5%85%B3%E4%BA%8EGithub-Actions%E4%BD%BF%E7%94%A8Python%E8%87%AA%E5%8A%A8%E5%8C%96%E6%97%B6%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/",
            "title": "关于Github Actions使用Python自动化时报错的解决方法",
            "date_published": "2023-08-12T15:05:45.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>打算用 Python 写一个微信刷步放在 Github-Actions 每日自动刷步的 <a href=\"https://github.com/UI123456ax/run_zepp\">微信刷步项目</a><br />\n遇到了一些问题，本来都打算要放弃了呃 啊 (ノ｀Д) ノ，下面看看有没有和我一样问题</p>\n<h1 id=\"报错类型\"><a class=\"anchor\" href=\"#报错类型\">#</a> 报错类型</h1>\n<p>报错  <code>Error: Version 3.9.1 with arch x64 not found</code> ，如图：<br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/05_/05_01.png\" alt=\"tR54.png\" /><br />\n 搜索一番，最后在贴吧找到<strong>解决方法</strong>： <code>https://tieba.baidu.com/p/8172024054</code></p>\n<h2 id=\"原因\"><a class=\"anchor\" href=\"#原因\">#</a> 原因</h2>\n<p>可能就是因为大部分人的 Runner 统一是 ubuntu-latest 导致的。</p>\n<blockquote>\n<p>Github 的 ubuntu-latest 标签会随机分发到 Ubuntu 22.04 LTS<br />\nUbuntu 22.04 LTS ，这个最新版的缓存并没有 Python3.9.1</p>\n</blockquote>\n<p>简单的说就是 Python v3.9.1 在 GitHub 不支持 Ubuntu 22.04 LTS<br />\n 所以才会报错  <code>Error: Version 3.9.1 with arch x64 not found</code></p>\n<h2 id=\"解决方法\"><a class=\"anchor\" href=\"#解决方法\">#</a> 解决方法</h2>\n<p>有两个解决方法<br />\n 1. 把 runner 换成支持 3.9.1 的 Ubuntu20.04 :</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>runs-on: ubuntu-20.04 LST</pre></td></tr></table></figure><p>2. 将 .yml 里的  <code>python-version: '版本'</code>  换成  <code>3.9.12</code>  :</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>with:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>          python-version: <span class=\"token string\">'3.9.12'</span></pre></td></tr></table></figure><ul>\n<li>比起第一种解决方法，我比较推荐第二种方法</li>\n</ul>\n",
            "tags": [
                "Github",
                "Python",
                "Debug"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2023/06/24/0_100/03_Hexo%E6%B7%BB%E5%8A%A0Live2d%EF%BC%88%E7%9C%8B%E6%9D%BF%E5%A8%98%EF%BC%89/",
            "url": "https://blog.neonnoir.link/2023/06/24/0_100/03_Hexo%E6%B7%BB%E5%8A%A0Live2d%EF%BC%88%E7%9C%8B%E6%9D%BF%E5%A8%98%EF%BC%89/",
            "title": "Hexo美化 添加Live2d（看板娘）",
            "date_published": "2023-06-24T08:54:16.000Z",
            "content_html": "<h1 id=\"hexo-helper-live2d\"><a class=\"anchor\" href=\"#hexo-helper-live2d\">#</a> <a href=\"https://github.com/EYHN/hexo-helper-live2d\">Hexo-helper-live2d</a> 插件安装与配置</h1>\n<p>Hexo 的官方支持看板娘，已经封装好了插件～</p>\n<blockquote>\n<p>不用折腾啦，欸真好啊</p>\n</blockquote>\n<h2 id=\"安装插件\"><a class=\"anchor\" href=\"#安装插件\">#</a> 安装插件</h2>\n<p>在站点根目录下打开终端，输入以下命令</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">--save</span> hexo-helper-live2d</pre></td></tr></table></figure><h2 id=\"选择并安装模型\"><a class=\"anchor\" href=\"#选择并安装模型\">#</a> 选择并安装模型</h2>\n<p>以 live2d-widget-model-shizuku 模型为例</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">--save</span> live2d-widget-model-shizuku</pre></td></tr></table></figure><p>点击<a href=\"https://blog.csdn.net/wang_123_zy/article/details/87181892\">预览更多模型</a></p>\n<h2 id=\"配置live2d\"><a class=\"anchor\" href=\"#配置live2d\">#</a> 配置 Live2d</h2>\n<p>站点配置文件  <code>_config.yml</code> ，新添加如下内容：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Live2D</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">## https://github.com/EYHN/hexo-helper-live2d</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>live2d:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  enable: <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\"># enable: false</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  scriptFrom: <span class=\"token builtin class-name\">local</span> <span class=\"token comment\"># 默认</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  pluginRootPath: live2dw/ <span class=\"token comment\"># 插件在站点上的根目录 (相对路径)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  pluginJsPath: lib/ <span class=\"token comment\"># 脚本文件相对与插件根目录路径</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  pluginModelPath: assets/ <span class=\"token comment\"># 模型文件相对与插件根目录路径</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\"># scriptFrom: jsdelivr # jsdelivr CDN</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\"># scriptFrom: unpkg # unpkg CDN</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  tagMode: <span class=\"token boolean\">false</span> <span class=\"token comment\"># 标签模式，是否仅替换 live2d tag 标签而非插入到所有页面中</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  debug: <span class=\"token boolean\">false</span> <span class=\"token comment\"># 调试，是否在控制台输出日志</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  model:</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    use: live2d-widget-model-shizuku <span class=\"token comment\"># 使用的 Live2d 模型名称</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\"># use: wanko # 博客根目录 /live2d_models/ 下的目录名</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\"># use: ./wives/wanko # 相对于博客根目录的路径</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  display:</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    position: right <span class=\"token comment\">#显示位置</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    width: <span class=\"token number\">150</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    height: <span class=\"token number\">300</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  mobile:</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    show: <span class=\"token boolean\">true</span> <span class=\"token comment\"># 手机中是否展示</span></pre></td></tr></table></figure><p>最后输入  <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>  就可以本地预览看到你的 Live2d 啦</p>\n",
            "tags": [
                "Blog",
                "Configuration"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2023/06/23/0_100/02_Shoka%E5%9B%BE%E5%BA%8A%E4%BF%AE%E5%A4%8D/",
            "url": "https://blog.neonnoir.link/2023/06/23/0_100/02_Shoka%E5%9B%BE%E5%BA%8A%E4%BF%AE%E5%A4%8D/",
            "title": "关于Shoka图床修复",
            "date_published": "2023-06-23T09:28:51.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>信心满满给 Hexo 布置 Shoka 主题时，发现新浪微博 (图床) 把背景图片屏蔽了（哭）<br />\n折腾了好几天终于找到恢复的方法了，下面就跟我一起来看看吧</p>\n<h2 id=\"恢复方针\"><a class=\"anchor\" href=\"#恢复方针\">#</a> 恢复方针</h2>\n<ol>\n<li>使用图床配合图缓存链接实现图片显示（图床当然是 Github 白嫖来的，咱可是白嫖帝😋）<details><summary>点击查看 具体操作</summary><div>\n<ul>\n<li>把图片下载至本地（或者使用现有的本地）</li>\n<li>使用 PicGo 上传至 Github 仓库</li>\n<li>随随便便修改一下文件<div class=\"note default\">\n<p><s> <code>小声说一下其实前两步可以省略,直接第三步套用我的图床</code> 😏</s> 图源已删除，现已无法使用</p>\n</div>\n</li>\n</ul>\n</div></details>\n</li>\n<li>使用 CDN 加速网站顺便也加速了本地图片（CDN 加速用免费的 CloudFlare）<details><summary>点击查看 具体操作</summary><div>\n<ul>\n<li>把图片下载至本地（或者使用现有的本地）</li>\n<li>在  <code>\\shoka\\source\\</code>  创建一个文件夹把图片丢进去</li>\n<li>随随便便修改一下文件</li>\n</ul>\n</div></details>\n</li>\n<li>使用图片 API<details><summary>点击查看 具体操作</summary><div>\n<p>主题配置文件中（ <code>&lt;root&gt;\\themes\\_config.yml</code> ），设置图床 API：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">image_server</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://acg.xydwz.cn/api/api.php\"</span> <span class=\"token comment\">#填你的 API</span></pre></td></tr></table></figure><p>这个就不细讲了，没啥好说的</p>\n</div></details>\n</li>\n</ol>\n<h1 id=\"关于如何下载和图片在哪找\"><a class=\"anchor\" href=\"#关于如何下载和图片在哪找\">#</a> 关于如何下载和图片在哪找？</h1>\n<p>推荐两个网站，大部分想要的图都可以找到<br />\n<a href=\"https://www.wallpapermaiden.com/\"> https://www.wallpapermaiden.com/</a><br />\n<a href=\"https://konachan.net/\">https://konachan.net/</a><br />\n 要不然用<a href=\"https://www.pixiv.net/\"> P 站 Pixiv</a> 也可以，只不过需要梯子 量力吧<br />\n这里就不多说了，我相信大家的图库都很大</p>\n<h1 id=\"图片缓存-github图床\"><a class=\"anchor\" href=\"#图片缓存-github图床\">#</a> 图片缓存 + Github 图床</h1>\n<p>PicGo 官网：<a href=\"https://picgo.github.io/PicGo-Doc/zh/\">https://picgo.github.io/PicGo-Doc/zh/</a><br />\n 使用与配置方法请阅读<a href=\"https://picgo.github.io/PicGo-Doc/zh/guide/getting-started.html#%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B\">官方文档</a></p>\n<h2 id=\"修改文件\"><a class=\"anchor\" href=\"#修改文件\">#</a> 修改文件</h2>\n<p>在  <code>&lt;root&gt;\\themes\\shoka\\scripts\\helpers\\engine.js</code>  文件内修改</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">parseImage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">img<span class=\"token punctuation\">,</span> size</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'//'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> img</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">'https://tva'</span><span class=\"token operator\">+</span>randomServer<span class=\"token operator\">+</span><span class=\"token string\">'.sinaimg.cn/'</span><span class=\"token operator\">+</span>size<span class=\"token operator\">+</span><span class=\"token string\">'/'</span><span class=\"token operator\">+</span>img <span class=\"token comment\">// 替换成自己 Github 图床前链</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><blockquote>\n<p>(图缓存链接) + <a href=\"https://raw.githubusercontent.com/%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BB%93%E5%BA%93%E5%90%8D/main/%E4%BB%93%E5%BA%93%E6%96%87%E4%BB%B6%E5%A4%B9/\">https://raw.githubusercontent.com/ 用户名 / 仓库名 /main/ 仓库文件夹 /</a></p>\n<blockquote>\n<p>例：<a href=\"https://images.weserv.nl/?url=https://images.weserv.nl/?url=https://raw.githubusercontent.com/UI123456ax/images/main/ACG-img/\">https://images.weserv.nl/?url=https://images.weserv.nl/?url=https://raw.githubusercontent.com/UI123456ax/images/main/ACG-img/</a><br />\n 这里以  <code>https://images.weserv.nl/?url=</code>  为例</p>\n</blockquote>\n</blockquote>\n<p>当然啦，也可以不用加图缓存！只不过 Github 图片访问需要科学上网</p>\n<p>如下修改</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">parseImage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">img<span class=\"token punctuation\">,</span> size</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'//'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> img</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">'https://images.weserv.nl/?url=https://raw.githubusercontent.com/UI123456ax/images/main/ACG-img/'</span><span class=\"token operator\">+</span>img</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>可能会有人问：为什么不使用 jsdelivr 公共 CDN 加速 Github 图床？</strong><br />\n <code>jsdelivr大部分时候加载不出图片，用了跟没用没两样</code> 当然如果你坚持要用的话就把 Return 里的改成 jsdelivr 的</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token string\">'https://cdn.jsdelivr.net/gh/用户名/仓库名@main/仓库文件夹/'</span><span class=\"token operator\">+</span>img</pre></td></tr></table></figure><p><strong>继续</strong><br />\n复制所有 Github 图片链接<br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/02_/02_01.png\" alt=\"tLIT.png\" /><br />\n 这里教你们一个技巧</p>\n<ul>\n<li>新建一个空白文本文档.txt</li>\n<li>把复制的链接粘贴到文本中，CTRL+H 打开替换</li>\n</ul>\n<p>替换内容：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>https<span class=\"token punctuation\">:</span>//raw.githubusercontent.com/用户名/仓库名/main/仓库文件夹/</pre></td></tr></table></figure><p>替换为：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> &lt;<span class=\"token punctuation\">-</span>(空格)</pre></td></tr></table></figure><p><strong>注意在 - 之后要加上空格！</strong><br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/02_/02_02.png\" alt=\"tBaz.png\" /></p>\n<ul>\n<li>全部替换</li>\n<li>再将链接全部复制粘贴替换  <code>themes\\shoka\\ _images.yml</code>  内的所有内容</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> e3db001ca1ff57749d14004c392accff.jpg</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">-</span> dfe2f1c4c2c9f926c0db1122cb5117b2.jpg</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">-</span> dc8870b29798b5ade59b5b6805550904.jpg</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">-</span> dc71f9aaa4c2c23df93f5473e0d65c50.jpg</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">-</span> db86e338a1b3b97e7d8c2217e1d2bf48.jpg</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">-</span> d047cba5f424d9cfbf857bf1d6690773.jpg</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">-</span> d1d6420e8a4b75574864f6782240ac33.jpg</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">-</span> d0bb5becc1c2934e54379eab25746ca8.jpg</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">-</span> c70a9e45dcfbb6859374570714502db6.jpg</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">-</span> c62ab5ee354665e3151216320ce140d9.jpg</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">-</span> c4a826638dd14b7fe2abfad207b1e912.jpg</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">-</span> bef2fc82f00cbd6a6f1fd5f569ab50c3.jpg</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">-</span> bbe32387e020ade5a40269ce6ba5471c.jpg</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">-</span> b3b3c729b93edb06d6059682c7a60e9c.jpg</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">-</span> b1fd49321ea59220513f8995bfff313c.jpg</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">-</span> ae871e04ea128b149f8ecef6fca4da33.jpg</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">-</span> adf77fe6926d1ff5d19dfcccdf39d1de.jpg</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">-</span> adc9b9e771145bea157df1cc255f6cc2.jpg</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">-</span> a965cf7c09947f7fe414bddacdd9d0b8.jpg</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">-</span> a646e517b1405f3855b350999bcb05d9.jpg</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">-</span> a062f0325a3cfb64fb1443ae5be8b4e7.jpg</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">-</span> a6de80ed3cd16ea1c7c4cca496a0f492.jpg</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">-</span> a005f8200d7fd27c84489972b49a92ba.jpg</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">-</span> a2ec7cec9a1e7456d29c7d250cd7452a.jpg</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">-</span> a2bf079ec5150592e27e396ca5d321a1.jpg</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">-</span> 94931551657fafc74bd2dce512183857.jpg</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">-</span> 84039576b96363bc284fc048283cd7c5.jpg</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">-</span> 5573333f45cab633a876749a24cdf0fb.jpg</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">-</span> 5311300a12f2d5ca050dba5a3a771bc7.jpg</pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">-</span> 130223e071a734cd85e6b99a83af4798.jpg</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">-</span> 99546b3a8824c86bcee697fdb2f1c078.jpg</pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">-</span> 60799bad4e738c34399c018c7b205fbc.jpg</pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">-</span> 51764cd5a8120db25e9e42c81bb1d60e.jpg</pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">-</span> 08182b4baa04601e25bf6ca7945ee1e2.jpg</pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">-</span> 5182e389e0c71d21698c31575f1f57e0.jpg</pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">-</span> 4804c039150f917b3bfc9bf5a21fe0f7.jpg</pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">-</span> 4592ac3071dc6e715bbd31dcde8dd403.jpg</pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">-</span> 4012d96fdc5ec530bf9bca94233d41e6.jpg</pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">-</span> 2502e84dfb214f09f68170a0a1e2d492.jpg</pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">-</span> 2476ea63b66d5eebaa1d2f5229e7ca1f.jpg</pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">-</span> 960e5da3cf8d45aa3fcab6400195c436.jpg</pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">-</span> 0923f285d316f9567eddfdfa7e13b91a.jpg</pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">-</span> 788c70e8f45172d49662d9a35168dde9.jpg</pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">-</span> 651abfed7e735d7908e08caf22dd69a8.jpg</pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">-</span> 496b429666d5bf470a122e087b89cb40.jpg</pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">-</span> 207fc2a84cfe6045c754576fe1a85314.jpg</pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">-</span> 0175e1dfd1fd5fff00deb7a2af971f46.jpg</pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">-</span> 138bcad99511378a15d4061c5ce729ce.jpg</pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">-</span> 99e4538446c090fa1ee0105a7ded7f1f.jpg</pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">-</span> 94d83a5128a645d6225817f507a76b60.jpg</pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">-</span> 94a41f65053699b245977621728bd658.jpg</pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">-</span> 86b7a62e5e158c6d1f98da1f85916496.jpg</pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token punctuation\">-</span> 84ca7d2168efbb4ebcbe7b0c007c0a48.jpg</pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">-</span> 081eebfe88449755af1782ff0a238791.jpg</pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">-</span> 070e21bea949d71faaf613f609f5bc25.jpg</pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token punctuation\">-</span> 69e95f2171ff6ed40bbf307d85a27e53.jpg</pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">-</span> 58bcc73a1042e227a680fae8d0c60e4e.jpg</pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">-</span> 51bd95f698debcc40453f748e722ec57.jpg</pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">-</span> 50d09d73d9aba3ededef6943731a1d38.jpg</pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">-</span> 29ca60308337b405c9a9a5724045976d.jpg</pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">-</span> 27cb68c074bd9edc70039fd7811bbab5.jpg</pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">-</span> 23e74792ff64a22749562f1e129bd70b.jpg</pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">-</span> 11faebcaae455963b927046d47d4e484.jpg</pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">-</span> 10e7262a92eedcf32868baaf529bff6c.jpg</pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token punctuation\">-</span> 9e213346c2d68e787c7acc39f0f46284.jpg</pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">-</span> 9e45cf91e3c04e94df1636b2cd8d72ed.jpg</pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">-</span> 9c985751e135e7706a666f643e31474f.jpg</pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">-</span> 9bf18fcec6c8c234cb7aa085f00451e2.jpg</pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token punctuation\">-</span> 9a112cfaf02bb74699580d5d9b876796.jpg</pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token punctuation\">-</span> 8ca90989ee1ab7367130b81e37cdd0ff.jpg</pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">-</span> 7b6b4eb75e08bc02ad84f04b327faadf.jpg</pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token punctuation\">-</span> 7af92c650fa3de70a547579228d91336.jpg</pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">-</span> 07bccd57ccb1641052cd1dc086c417cc.jpg</pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">-</span> 5ef02b8dcf7921e6c3a51e1a58733e75.jpg</pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token punctuation\">-</span> 5db3450aea286ea15a38332502400841.jpg</pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token punctuation\">-</span> 5cef39f9c16e3d2508a33d3c7979a04c.jpg</pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token punctuation\">-</span> 5b6bf3d387f05f17ee32312ef75ed6b6.jpg</pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token punctuation\">-</span> 5a6e0202925f2ad141f5fe5162d47085.jpg</pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token punctuation\">-</span> 4da8e0c1a04101a7927b54d35f4c984b.jpg</pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">-</span> 4acf5b788331a25c5aae532d0eddb6cb.jpg</pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token punctuation\">-</span> 4a20897e9d038161c148b6b5a509b411.jpg</pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token punctuation\">-</span> 4a12ab3b36e9a18b6260265a4f808186.jpg</pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token punctuation\">-</span> 3efbf07538fd53ba15f64b907f024792.jpg</pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token punctuation\">-</span> 3ae36ebe6ba249cf8f75042f1d10c582.jpg</pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token punctuation\">-</span> 2a8343aa0b84ebe1d31538423efcd9be.jpg</pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token punctuation\">-</span> 1dd656b56c466512d3e5ee530b697d7e.jpg</pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token punctuation\">-</span> 1a299ec38d38a13db9d852856b368bd3.jpg</pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token punctuation\">-</span> 0cb1bc5a66e556f1c3328772117051b9.jpg</pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token punctuation\">-</span> 0aa087029f7e809ef6485ce8b41f1fd7.jpg</pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token punctuation\">-</span> f596ae1c48dfd42a71955c9e36e56926.jpg</pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token punctuation\">-</span> f9aa7e764ffae9f0d2a83370e4819a7b.jpg</pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token punctuation\">-</span> f4e0c401a095d26628aa1b3d178ee094.jpg</pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token punctuation\">-</span> ee1048baa73c396c8fc49afbb531ed2b.jpg</pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token punctuation\">-</span> ea7c56ba50627e216ee4f72a0f7525e0.jpg</pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token punctuation\">-</span> e749836dca3d1f16836561aa5a1319cd.jpg</pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token punctuation\">-</span> e757bc843c78f455519eeeff5f51e76a.jpg</pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token punctuation\">-</span> e092cf59ea4b4b0f90a782cb75ef127c.jpg</pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token punctuation\">-</span> e9c3771ed0c9f7f15a0181c10d748c4d.jpg</pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token punctuation\">-</span> e4f65cd3d277234681c4d35d5af0547e.jpg</pre></td></tr></table></figure><blockquote>\n<p><s>其实直接使用我的图床就解决问题啦</s> 图源已删除，现已无法使用</p>\n</blockquote>\n<h1 id=\"使用本地图片\"><a class=\"anchor\" href=\"#使用本地图片\">#</a> 使用本地图片</h1>\n<p>在  <code>&lt;root&gt;\\themes\\shoka\\source</code>  内随便创建一个文件夹（这里我创建一个名为 images_ACG 的文件夹）<br />\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/images/Blog_images/02_/02_03.png\" alt=\"gO2G.png\" /><br />\n<strong> 把你要使用图片丢进去</strong></p>\n<h2 id=\"提取文件名称\"><a class=\"anchor\" href=\"#提取文件名称\">#</a> 提取文件名称</h2>\n<ol>\n<li>\n<p>用 CMD 打开文件夹再往里面输入以下代码：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">dir</span> *.*/b<span class=\"token operator\">></span> 名称.txt</pre></td></tr></table></figure><p>就会在里面生成一个  <code>名称.txt</code>  的文件，里面就总结了文件夹里的文件名称</p>\n</li>\n<li>\n<p>或者说，在这个文件夹里建立一个  <code>名称.txt</code>  文本文档，然后打开这个.txt 文本文档<br />\n输入上面的代码，把这个.txt 文件的后缀名改为  <code>名称.bat</code> ，打开运行之后，也是同样的效果</p>\n</li>\n</ol>\n<p><strong>全部完成后别忘了把.txt 文本删除</strong></p>\n<h2 id=\"修改文件-2\"><a class=\"anchor\" href=\"#修改文件-2\">#</a> 修改文件</h2>\n<p>在  <code>&lt;root&gt;\\themes\\shoka\\scripts\\helpers\\engine.js</code>  文件内修改</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">parseImage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">img<span class=\"token punctuation\">,</span> size</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'//'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> img</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">'/images_ACG/'</span><span class=\"token operator\">+</span>img <span class=\"token comment\">// 在两个 / 之间写你的文件夹名称</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>用老办法（替换）在刚才的文本的每一项前添加  <code>- （-后有一个空格）</code> <br />\n再将链接全部复制粘贴替换  <code>themes\\shoka\\ _images.yml</code>  内的所有内容</p>\n<h2 id=\"注意\"><a class=\"anchor\" href=\"#注意\">#</a> 注意！</h2>\n<p>这种方法需要把网站进行加速处理，不然的话一样是需要魔法上网才能看到背景图片的<br />\n推荐使用<a href=\"https://dash.cloudflare.com/\"> CloudFlare</a> 免费计划的 CDN 加速（免费的流量够用）</p>\n<h1 id=\"结语\"><a class=\"anchor\" href=\"#结语\">#</a> 结语</h1>\n<p>终端输入  <code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</code>  看你的成果<br />\n不管用哪种方法用最方便最适合的就可以了，仅供参考</p>\n",
            "tags": [
                "Blog",
                "Shoka"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2023/06/21/0_100/01_Hexo/",
            "url": "https://blog.neonnoir.link/2023/06/21/0_100/01_Hexo/",
            "title": "关于Hexo",
            "date_published": "2023-06-21T14:03:51.000Z",
            "content_html": "<h1 id=\"博客\"><a class=\"anchor\" href=\"#博客\">#</a> 博客</h1>\n<p>2023-06-21 19:08:52 本博客基于 Hexo 正式创建，并使用主题<a href=\"https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/\"> Shoka</a></p>\n<p>2025-03-07 01:04:26 更改主题并使用<a href=\"https://hexo.docs.shokax.top/\"> ShokaX</a></p>\n<blockquote>\n<p>记录自己</p>\n</blockquote>\n<h1 id=\"hexo\"><a class=\"anchor\" href=\"#hexo\">#</a> Hexo</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> hexo-cli</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># npx hexo &lt;command></span></pre></td></tr></table></figure><h2 id=\"github配置\"><a class=\"anchor\" href=\"#github配置\">#</a> Github 配置</h2>\n<h3 id=\"配置身份密钥\"><a class=\"anchor\" href=\"#配置身份密钥\">#</a> 配置身份密钥</h3>\n<p>登录 git 账号</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name <span class=\"token string\">\"user_name\"</span> <span class=\"token comment\"># 填入 GitHub 用户名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email <span class=\"token string\">\"user_email\"</span> <span class=\"token comment\"># 填入 GitHub 注册的邮箱</span></pre></td></tr></table></figure><p>获取 SSH KEY</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 默认即可</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ssh-keygen <span class=\"token parameter variable\">-t</span> rsa <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"user.email\"</span></pre></td></tr></table></figure><p><code>C:\\Users\\username\\.ssh\\id_rsa.pub</code>  公钥内容复制至 Gtihub<a href=\"https://github.com/settings/keys\">SSH and GPG keys</a></p>\n<p>检测公钥设置是否成功</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-T</span> git@github.com</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># Hi username! You've successfully authenticated, but GitHub does not provide shell access.</span></pre></td></tr></table></figure><h3 id=\"配置hexo\"><a class=\"anchor\" href=\"#配置hexo\">#</a> 配置 Hexo</h3>\n<p>安装 git 插件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><p><code>&lt;root&gt;\\_config.yml</code></p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'git'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> git@github.com<span class=\"token punctuation\">:</span>username/username.github.io.git <span class=\"token comment\"># git 仓库地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master</pre></td></tr></table></figure><blockquote>\n<p>如果关于推送失败时，将  <code>&lt;root&gt;\\.deploy_git</code>  文件夹删除即可</p>\n</blockquote>\n<h2 id=\"基础指令\"><a class=\"anchor\" href=\"#基础指令\">#</a> 基础指令</h2>\n<p>初始化  <code>hexo init</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 生成 public 文件夹</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hexo g</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 删除 public 文件夹</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>hexo clean</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 开启本地服务器 http://localhost:4000/</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>hexo s</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 推送至 Github</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>hexo d</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 创建文章</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>hexo n <span class=\"token string\">'&lt;title>'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 禁用加载插件和脚本</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>hexo <span class=\"token parameter variable\">--safe</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 将消息详细记录到终端和 debug.log 文件</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>hexo <span class=\"token parameter variable\">--debug</span></pre></td></tr></table></figure><blockquote>\n<p>一键三连上传  <code>hexo c &amp;&amp; hexo g &amp;&amp; hexo d</code></p>\n</blockquote>\n<h1 id=\"插件\"><a class=\"anchor\" href=\"#插件\">#</a> 插件</h1>\n<p>目前安装的～</p>\n<h2 id=\"主题需要\"><a class=\"anchor\" href=\"#主题需要\">#</a> 主题需要</h2>\n<h3 id=\"markdown渲染\"><a class=\"anchor\" href=\"#markdown渲染\">#</a> Markdown 渲染</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 先删除已安装的 Markdown 渲染插件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> un hexo-renderer-marked <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><p>hexo-renderer-multi-next-markdown-it</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> i hexo-renderer-multi-next-markdown-it <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><h3 id=\"css加载器\"><a class=\"anchor\" href=\"#css加载器\">#</a> css 加载器</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-autoprefixer <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><p>_config.yml</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">autoprefixer</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">'*.min.css'</span></pre></td></tr></table></figure><h3 id=\"搜索功能\"><a class=\"anchor\" href=\"#搜索功能\">#</a> 搜索功能</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-algoliasearch <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><p>_config.yml</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">algolia</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">appId</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your appId</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">apiKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your apiKey</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">adminApiKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your adminApiKey</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">chunkSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">indexName</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#\"shoka\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">fields</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">-</span> title <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">-</span> path <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">-</span> categories <span class=\"token comment\">#推荐配置</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">-</span> content<span class=\"token punctuation\">:</span>strip<span class=\"token punctuation\">:</span>truncate<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2000</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">-</span> gallery</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">-</span> photos</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">-</span> tags</pre></td></tr></table></figure><h3 id=\"文章统计\"><a class=\"anchor\" href=\"#文章统计\">#</a> 文章统计</h3>\n<p>字数、阅读时间</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-symbols-count-time</pre></td></tr></table></figure><h3 id=\"feed\"><a class=\"anchor\" href=\"#feed\">#</a> Feed</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-feed --save-dev</pre></td></tr></table></figure><p>_config.yml</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">keywords</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#站点关键词，用 “,” 分隔</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">feed</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">order_by</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"-date\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">tag_dir</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">category_dir</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">rss</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/rss.ejs\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"rss.xml\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">atom</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/atom.ejs\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"atom.xml\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">jsonFeed</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/json.ejs\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"feed.json\"</span></pre></td></tr></table></figure><h2 id=\"功能类非必须\"><a class=\"anchor\" href=\"#功能类非必须\">#</a> 功能类 (非必须)</h2>\n<h3 id=\"隐藏文章\"><a class=\"anchor\" href=\"#隐藏文章\">#</a> 隐藏文章</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-hide-posts <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><p>_config.yml 配置</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># hexo-hide-posts</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">hide_posts</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\"># 可以改成其他你喜欢的名字</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">filter</span><span class=\"token punctuation\">:</span> hidden</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\"># 指定你想要传递隐藏文章的位置，比如让所有隐藏文章在存档页面可见</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\"># 常见的位置有：index, tag, category, archive, sitemap, feed, etc.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\"># 留空则默认全部隐藏</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">public_generators</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\"># 为隐藏的文章添加 noindex meta 标签，阻止搜索引擎收录</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">noindex</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><p>在想要隐藏的文章里添加 hidden 标记</p>\n<pre><code class=\"language-Markdown\">hidden: true\n---\n</code></pre>\n<blockquote>\n<p>可以在命令行运行  <code>hexo hidden:list</code>  来获取当前所有的已隐藏文章列表</p>\n</blockquote>\n<h1 id=\"评论系统\"><a class=\"anchor\" href=\"#评论系统\">#</a> 评论系统</h1>\n<p><s>Valine(LeanCloud)</s><br />\nTwikoo</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-next-twikoo@1.0.3</pre></td></tr></table></figure><h1 id=\"这里是用来测试hexotheme\"><a class=\"anchor\" href=\"#这里是用来测试hexotheme\">#</a> 这里是用来测试 Hexo&amp;Theme</h1>\n<details><summary>**点击折叠**</summary><div>\n<p>这是被隐藏的内容</p>\n</div></details>\n<p>&lt;!-- 模糊模糊模糊模糊模糊模糊 {.bulr}  --&gt;</p>\n",
            "tags": [
                "Notes",
                "Blog"
            ]
        },
        {
            "id": "https://blog.neonnoir.link/2023/06/21/0_100/00_MarkDown/",
            "url": "https://blog.neonnoir.link/2023/06/21/0_100/00_MarkDown/",
            "title": "MarkDown语法",
            "date_published": "2023-06-21T11:08:52.000Z",
            "content_html": "<p>更多可阅读<a href=\"https://markdown.com.cn/basic-syntax/\"> Markdown 官方文档</a></p>\n<blockquote>\n<p>均可使用 html 标签替代</p>\n</blockquote>\n<h1 id=\"markdown基本语法\"><a class=\"anchor\" href=\"#markdown基本语法\">#</a> Markdown 基本语法</h1>\n<h2 id=\"分级语法\"><a class=\"anchor\" href=\"#分级语法\">#</a> 分级语法</h2>\n<p><code>#</code> 的数量代表了标题的级别<br />\n与 HTML 语法的 &lt;h&gt; 标签一致</p>\n<pre><code class=\"language-Markdown\"># 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题  &lt;!--最多6级标题--&gt;\n</code></pre>\n<h3 id=\"可选语法\"><a class=\"anchor\" href=\"#可选语法\">#</a> 可选语法</h3>\n<p>可在文本下方添加任意数量的 == 号来标识一级标题，或者 -- 号来标识二级标题</p>\n<pre><code class=\"language-Markdown\">&lt;!-- 可理解为: # leve 1 --&gt;\nleve 1\n====== \n&lt;!-- 可理解为: ## leve 2 --&gt;\nleve 2\n------\n</code></pre>\n<blockquote>\n<p>需要注意 # 与文字有一个空格的间隙</p>\n</blockquote>\n<hr />\n<h2 id=\"段落语法\"><a class=\"anchor\" href=\"#段落语法\">#</a> 段落语法</h2>\n<p>和通常的打字一样，如果在同行打字换行的就使用  <code>&lt;br&gt;</code>  标签</p>\n<pre><code class=\"language-Markdown\">Hello_World&lt;br&gt;你好世界\n</code></pre>\n<p>效果如下：<br />\nHello_World <code>&lt;br&gt;</code>  你好世界</p>\n<h3 id=\"强调语法\"><a class=\"anchor\" href=\"#强调语法\">#</a> 强调语法</h3>\n<h4 id=\"粗体bold\"><a class=\"anchor\" href=\"#粗体bold\">#</a> <strong>粗体（Bold）</strong></h4>\n<p>加粗文本，在短语的前后各添加两个星号 (*) 或下划线 ( _ )</p>\n<pre><code class=\"language-Markdown\">**Hello** __World__\n&lt;!-- HTML中则是&lt;strong&gt;&lt;/strong&gt; --&gt;\n</code></pre>\n<p>效果如下：<br />\n<strong>Hello</strong> <strong>World</strong></p>\n<blockquote>\n<p>一般只推荐使用 * 号的方法</p>\n</blockquote>\n<h4 id=\"斜体italic\"><a class=\"anchor\" href=\"#斜体italic\">#</a> <em>斜体（Italic）</em></h4>\n<p>斜体显示文本，在短语的前后各添加一个星号 (*) 或下划线 ( _ )</p>\n<pre><code class=\"language-Markdown\">*Hello* _World_\n&lt;!-- HTML中则是&lt;em&gt;&lt;/em&gt; --&gt;\n</code></pre>\n<p>效果如下：<br />\n<em>Hello</em> <em>World</em></p>\n<blockquote>\n<p>一般只推荐使用 * 号的方法</p>\n</blockquote>\n<h4 id=\"删除线\"><a class=\"anchor\" href=\"#删除线\">#</a> <s>删除线</s></h4>\n<p>若要删除单词，请在单词前后使用两个波浪号～～</p>\n<pre><code class=\"language-Markdown\">~~世界是平坦的。~~ 我们现在知道世界是圆的。\n</code></pre>\n<p>效果如下：<br />\n<s>世界是平坦的。</s> 我们现在知道世界是圆的。</p>\n<hr />\n<h3 id=\"引用语法\"><a class=\"anchor\" href=\"#引用语法\">#</a> 引用语法</h3>\n<p>要创建块引用，请在段落前添加一个 &gt; 符号<br />\n多个段落块引用就在下面多加一个 &gt; 符号<br />\n &gt; 之间可以嵌套块引用只需要多加一个 &gt; 号</p>\n<pre><code class=\"language-Markdown\">&gt; Hello World\n&gt; I love you!\n&gt;&gt; Good job\n</code></pre>\n<p>实现效果如下：</p>\n<blockquote>\n<p>Hello World<br />\nI love you!</p>\n<blockquote>\n<p>Good job</p>\n</blockquote>\n</blockquote>\n<p>同时 &gt; 之间可以使用些不同的语法比如在里面添加  <code>列表</code></p>\n<h3 id=\"列表语法\"><a class=\"anchor\" href=\"#列表语法\">#</a> 列表语法</h3>\n<h4 id=\"有序列表\"><a class=\"anchor\" href=\"#有序列表\">#</a> 有序列表</h4>\n<pre><code class=\"language-Markdown\">1. one\n2. two\n3. three\n...\n&lt;!-- 在HTML中则是\n&lt;ol&gt;\n&lt;li&gt;one&lt;/li&gt;\n&lt;li&gt;two&lt;/li&gt;\n&lt;li&gt;three&lt;/li&gt;\n&lt;/ol&gt; --&gt;\n</code></pre>\n<p>效果如下：</p>\n<ol>\n<li>one</li>\n<li>two</li>\n<li>three</li>\n</ol>\n<h4 id=\"无序列表\"><a class=\"anchor\" href=\"#无序列表\">#</a> 无序列表</h4>\n<p>要创建无序列表，需要在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+)</p>\n<pre><code class=\"language-Markdown\">- 1\n- 2\n- 3\n...\n&lt;!-- 在HTML中则是\n&lt;ul&gt;\n&lt;li&gt;one&lt;/li&gt;\n&lt;li&gt;two&lt;/li&gt;\n&lt;li&gt;three&lt;/li&gt;\n&lt;/ul&gt; --&gt;\n</code></pre>\n<p>效果如下：</p>\n<ul>\n<li>1</li>\n<li>2</li>\n<li>3</li>\n</ul>\n<blockquote>\n<p>请注意：一般只使用 破折号 (-) 方法</p>\n</blockquote>\n<hr />\n<h4 id=\"任务列表语法\"><a class=\"anchor\" href=\"#任务列表语法\">#</a> 任务列表语法</h4>\n<p>在任务列表项之前添加破折号 - 和方括号 []，并在 [] 前面加上空格<br />\n要选择一个复选框，请在方括号 [x] 之间添加 x</p>\n<pre><code class=\"language-Markdown\">- [ ] 任务一 未做任务 `- + (空格) + [ ]`\n- [x] 任务二 已做任务 `- + (空格) + [x]`\n</code></pre>\n<p>效果如下：</p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> 任务一 未做任务</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> 任务二 已做任务</label></li>\n</ul>\n<h3 id=\"链接语法\"><a class=\"anchor\" href=\"#链接语法\">#</a> 链接语法</h3>\n<h4 id=\"文字链接\"><a class=\"anchor\" href=\"#文字链接\">#</a> 文字链接</h4>\n<p>超链接 Markdown 语法代码： <code>[超链接显示名](超链接地址 &quot;超链接title&quot;)</code></p>\n<blockquote>\n<p>链接 title 为可选项，也就是说可写可不写</p>\n</blockquote>\n<pre><code class=\"language-Markdown\">[Markdown官方语法](https://markdown.com.cn)\n&lt;!-- 对应的HTML代码：&lt;a href=&quot;超链接地址&quot; title=&quot;超链接title&quot;&gt;超链接显示名&lt;/a&gt; --&gt;\n</code></pre>\n<p>效果如下：<br />\n<a href=\"https://markdown.com.cn\">Markdown 官方语法</a></p>\n<h5 id=\"title\"><a class=\"anchor\" href=\"#title\">#</a> Title</h5>\n<p>链接 title 是<strong>当鼠标悬停在链接上时会出现的文字</strong>，这个 title 是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔</p>\n<pre><code class=\"language-Markdown\">[UI的Github仓库](https://github.com/ui123456ax/ &quot;Hello! 很高兴能认识你&quot;)\n</code></pre>\n<p>效果如下：<br />\n<a href=\"https://github.com/ui123456ax/\" title=\"Hello! 很高兴能认识你\">UI 的 Github 仓库</a></p>\n<h5 id=\"网址和email地址\"><a class=\"anchor\" href=\"#网址和email地址\">#</a> 网址和 Email 地址</h5>\n<p>使用尖括号可以很方便地把 URL 或者 email 地址变成可点击的链接</p>\n<pre><code class=\"language-Markdown\">&lt;https://github.com/ui123456ax/&gt;\n&lt;ui123456ax@gmail.com&gt;\n</code></pre>\n<p>效果如下：<br />\n<a href=\"https://github.com/ui123456ax/\">https://github.com/ui123456ax/</a><br />\n<a href=\"mailto:ui123456ax@gmail.com\">ui123456ax@gmail.com</a></p>\n<h5 id=\"带格式化的链接\"><a class=\"anchor\" href=\"#带格式化的链接\">#</a> 带格式化的链接</h5>\n<p>带  <code>强调</code> 链接</p>\n<pre><code class=\"language-Markdown\">粗体链接 **[我的博客](https://ui123456ax.github.io)**\n斜体链接 *[Markdown](https://www.markdownguide.org)*\n代码块链接 [`code`](#code)\n</code></pre>\n<p>效果如下：<br />\n粗体 <strong><a href=\"https://ui123456ax.github.io\">我的博客</a></strong><br />\n斜体 <em><a href=\"https://www.markdownguide.org\">Markdown</a></em><br />\n 代码块 <a href=\"#code\"> <code>code</code> </a></p>\n<h5 id=\"锚点链接\"><a class=\"anchor\" href=\"#锚点链接\">#</a> 锚点链接</h5>\n<p>主要为跳转到文章指定 id 的标签处</p>\n<ol>\n<li id=\"id\">设锚点：标题</li>\n<li>跳锚点: [文段] (#id)</li>\n</ol>\n<pre><code>### 链接语法&#123;#idname&#125;\n\n... 省略\n\n[回到文字链接处](#idname)\n</code></pre>\n<p>[回到文字链接处] (#idname)</p>\n<blockquote>\n<p>以上均可带 Title</p>\n</blockquote>\n<h4 id=\"图片链接\"><a class=\"anchor\" href=\"#图片链接\">#</a> 图片链接</h4>\n<p>要添加图像，请使用感叹号 (!), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本<br />\n插入图片 Markdown 语法代码： <code>![图片alt](图片链接 &quot;图片title&quot;)</code></p>\n<blockquote>\n<ol>\n<li><strong>图片 alt</strong> 可以不用写直接空白即可</li>\n<li><strong>图片 title</strong> 可写可不写</li>\n</ol>\n</blockquote>\n<pre><code class=\"language-Markdown\">![gx0x.jpg](https://img.cdn.loliloli.net/images/2023/09/01/gx0x.jpg)\n&lt;!-- 对应的HTML代码：&lt;img src=&quot;图片链接&quot; alt=&quot;图片alt&quot; title=&quot;图片title&quot;&gt; --&gt;\n</code></pre>\n<p>效果图：<br />\n<img loading=\"lazy\" data-src=\"https://img.cdn.loliloli.net/images/2023/09/01/gx0x.jpg\" alt=\"gx0x.jpg\" /></p>\n<h5 id=\"链接图片\"><a class=\"anchor\" href=\"#链接图片\">#</a> 链接图片</h5>\n<p>给图片增加链接，将图像的 Markdown 括在方括号中，然后将链接添加在圆括号中</p>\n<pre><code class=\"language-Markdown\">[![gNCH.gif](https://img.cdn.loliloli.net/images/2023/09/01/gNCH.gif &quot;小孤独~&quot;)](https://baike.baidu.com/item/%E5%AD%A4%E7%8B%AC%E6%91%87%E6%BB%9A%EF%BC%81/56105018)\n</code></pre>\n<blockquote>\n<p>请注意 [ ] 的位置！</p>\n</blockquote>\n<p>效果图（点击转跳百度百科）：<br />\n<a href=\"https://baike.baidu.com/item/%E5%AD%A4%E7%8B%AC%E6%91%87%E6%BB%9A%EF%BC%81/56105018\"><img loading=\"lazy\" data-src=\"https://img.cdn.loliloli.net/images/2023/09/01/gNCH.gif\" alt=\"gNCH.gif\" title=\"小孤独~\" /></a></p>\n<h2 id=\"代码语法\"><a class=\"anchor\" href=\"#代码语法\">#</a> 代码语法</h2>\n<h3 id=\"表示代码\"><a class=\"anchor\" href=\"#表示代码\">#</a> 表示代码</h3>\n<p>要将单词或短语表示为代码，请将其包裹在反引号 (`) 中</p>\n<pre><code class=\"language-Markdown\">`你好世界`\n&lt;!-- 在HTML中则是&lt;code&gt;&lt;/code&gt; --&gt;\n</code></pre>\n<p>效果如下：<br />\n <code>你好世界</code></p>\n<blockquote>\n<p>需要转义 (即在代码块显示 ` 符号)<br />\n 请你输入两个反引号 (``)</p>\n</blockquote>\n<hr />\n<h3 id=\"围栏代码块\"><a class=\"anchor\" href=\"#围栏代码块\">#</a> 围栏代码块</h3>\n<p>根据 Markdown 处理器的不同，在代码块之前和之后的行上使用三个反引号 (```) 或三个波浪号 (~~~)</p>\n<pre><code class=\"language-Markdown\">```JavaScirpt\ni = '我爱你，世界'\nconsole,log(i)\n```\n</code></pre>\n<p>效果如下：</p>\n<pre><code class=\"language-JavaScirpt\">i = '我爱你，世界'\nconsole,log(i)\n</code></pre>\n<blockquote>\n<p>要添加语法突出显示，在代码块之前的反引号旁边指定一种语言<br />\n比如上面的 &quot;JavaScirpt&quot;</p>\n<blockquote>\n<p>如果需要转义代码则在前后多加一个反引号 (````) 或波浪号 (~~~~)</p>\n</blockquote>\n</blockquote>\n<h2 id=\"分隔线语法\"><a class=\"anchor\" href=\"#分隔线语法\">#</a> 分隔线语法</h2>\n<p>要创建分隔线，需要在单独一行上使用三个或多个星号 (***)、破折号 (---) 或下划线 (___) ，并且不能包含其他内容</p>\n<pre><code class=\"language-Markdown\">***\n&lt;!-- 至少是3个  --&gt;\n&lt;!-- 与html的&lt;hr&gt;标签一致 --&gt;\n</code></pre>\n<p>效果如下：</p>\n<hr />\n<blockquote>\n<p>推荐使用破折号 (---) 或 HTML 的 &lt; hr &gt; 标签，能很明显的突出</p>\n</blockquote>\n<h1 id=\"内嵌-html-标签\"><a class=\"anchor\" href=\"#内嵌-html-标签\">#</a> 内嵌 HTML 标签</h1>\n<p>正如我开头所说的 Markdown 可以直接使用 HTML 的标签<br />\n甚至可以使用部分 CSS 自由装饰你的文本</p>\n<blockquote>\n<p>对于 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML 本身。如需使用 HTML，不需要额外标注这是 HTML 或是 Markdown，只需 HTML 标签添加到 Markdown 文本中即可。</p>\n</blockquote>\n<p>你可以把  <code>.html</code>  的文件后缀名改成  <code>.md</code>  完全可以正常打开，并且装饰的 CSS 也会自动使用<br />\n不过请注意，Markdown 是支持<strong>大部分</strong>的 HTML 标签，以及<strong>部分</strong>的 CSS</p>\n<blockquote>\n<p>在 HTML 块级标签内不能使用 Markdown 语法。例如  <code>&lt;p&gt;italic and **bold**&lt;/p&gt;</code>  将不起作用</p>\n</blockquote>\n<h1 id=\"markdown扩展语法\"><a class=\"anchor\" href=\"#markdown扩展语法\">#</a> Markdown 扩展语法</h1>\n<h2 id=\"表格\"><a class=\"anchor\" href=\"#表格\">#</a> 表格</h2>\n<p>要添加表，请使用三个或多个连字符（---）创建每列的标题，并使用管道（|）分隔每列</p>\n<blockquote>\n<p>可以选择在表的任一端添加管道</p>\n</blockquote>\n<pre><code class=\"language-Markdown\">| 标题 One    | 标题 Two    |\n| ----------- | ----------- |\n| Hello?      | Yes?        |\n| 你好     | 是的        |\n&lt;!-- 单元格宽度可以变化 --&gt;\n</code></pre>\n<p>呈现的输出如下所示：</p>\n<table>\n<thead>\n<tr>\n<th>标题 One</th>\n<th>标题 Two</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Hello?</td>\n<td>Yes?</td>\n</tr>\n<tr>\n<td>你好</td>\n<td>是的</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"对齐\"><a class=\"anchor\" href=\"#对齐\">#</a> 对齐</h3>\n<p>您可以通过在标题行中的连字符的左侧，右侧或两侧添加冒号（:），将列中的文本对齐到左侧，右侧或中心</p>\n<pre><code class=\"language-Markdown\">| 标题 One    | 标题 Two    | 标题 Three    |\n| :---        |    :----:   |          ---: |\n| Left        | Title       | Right         |\n| left        | Text        | right         |\n</code></pre>\n<p>呈现的输出如下所示：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">标题 One</th>\n<th style=\"text-align:center\">标题 Two</th>\n<th style=\"text-align:right\">标题 Three</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Left</td>\n<td style=\"text-align:center\">Title</td>\n<td style=\"text-align:right\">Right</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">left</td>\n<td style=\"text-align:center\">Text</td>\n<td style=\"text-align:right\">right</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"格式化表格中的文字\"><a class=\"anchor\" href=\"#格式化表格中的文字\">#</a> 格式化表格中的文字</h3>\n<p>可以在表格中设置文本格式。例如，您可以添加链接，代码（仅反引号（`），而不是<strong>代码块</strong>）和强调<br />\n不能添加标题，块引用，列表，水平规则，图像或 HTML 标签</p>\n<h2 id=\"脚注\"><a class=\"anchor\" href=\"#脚注\">#</a> 脚注</h2>\n<p>带有脚注的上标数字会出现在添加脚注参考的位置 读者可以<strong>单击链接以跳至页面底部的脚注内容</strong><br />\n创建脚注参考，方括号  <code>[^1]</code>  内添加插入符号和标识符。标识符可以是数字或单词，但不能包含空格或制表符</p>\n<blockquote>\n<p>脚注使您可以添加注释和参考，而不会使文档正文混乱<br />\n在括号内使用另一个插入符号和数字添加脚注，并用冒号和文本  <code>[^1]: 解释.</code></p>\n</blockquote>\n<pre><code class=\"language-Markdown\">这是一个脚注[^2]，这是一个更长的脚注[^你好]\n&lt;!-- 脚注将出现在文章末尾 --&gt;\n[^2]:我是一个脚注的\n\n[^你好]:我是第二个脚注的脚注\n欸,`好吧好吧`\n</code></pre>\n<p>效果如下：<br />\n这是一个脚注<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>，这是一个更长的脚注<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup></p>\n<h2 id=\"使用-emoji-表情\"><a class=\"anchor\" href=\"#使用-emoji-表情\">#</a> 使用 Emoji 表情</h2>\n<p>一些 Markdown 应用程序允许您通过键入表情符号短代码来插入表情符号<br />\n这些以冒号开头和结尾，并包含表情符号的名称</p>\n<pre><code class=\"language-Markdown\">去露营了！ :tent: 很快回来。\n[点我查看更多表情](https://gist.github.com/rxaviers/7360908)\n真好笑！ :joy:\n</code></pre>\n<p>效果如下：<br />\n去露营了！ ⛺️ 很快回来。<br />\n<a href=\"https://gist.github.com/rxaviers/7360908\">点我查看更多表情</a><br />\n真好笑！ 😂</p>\n<blockquote>\n<p>表情符号会因应用程序而异</p>\n</blockquote>\n<hr class=\"footnotes-sep\" />\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>我是一个脚注的 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>我是第二个脚注的脚注<br />\n欸， <code>好吧好吧</code> <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "Notes"
            ]
        }
    ]
}