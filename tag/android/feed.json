{
    "version": "https://jsonfeed.org/version/1",
    "title": "ほしづきよ • All posts by \"android\" tag",
    "description": "星月夜 ブログ",
    "home_page_url": "https://ui123456ax.github.io",
    "items": [
        {
            "id": "https://ui123456ax.github.io/2024/07/30/0_100/13_Android%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E4%B8%8A%E7%BD%91/",
            "url": "https://ui123456ax.github.io/2024/07/30/0_100/13_Android%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E4%B8%8A%E7%BD%91/",
            "title": "Android抓包工具无法正常上网",
            "date_published": "2024-07-30T01:28:48.000Z",
            "content_html": "<h1 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h1>\n<p>连上抓包工具之后无法连接网络，网站提示证书安全问题、App 无法正常使用等。通常是 SSL 返回时证书的问题:<br>\nAndroid 系统将 CA 证书又分为两种， <code>用户CA证书</code> 和 <code>系统CA证书</code> 。<br>\n顾明思议，用户 CA 证书是由用户自行安装的，系统 CA 证书是由系统内置的，很明显后者更加真实有效。<br>\n而我们要做的无非就是<strong>将证书导入至系统 CA 证书</strong>当中，或是<strong>绕过系统 CA 证书的检测</strong></p>\n<blockquote>\n<p>系统 CA 证书存储路径:  <code>/system/etc/security/cacerts/</code></p>\n</blockquote>\n<h1 id=\"解决\"><a class=\"markdownIt-Anchor\" href=\"#解决\">#</a> 解决</h1>\n<p>所需工具</p>\n<ul>\n<li>OpneSSL</li>\n<li>AndroidDebugBridge</li>\n<li>Xposed</li>\n<li>JustTrustMe 模块</li>\n</ul>\n<h2 id=\"导入-import\"><a class=\"markdownIt-Anchor\" href=\"#导入-import\">#</a> 导入 Import</h2>\n<h3 id=\"下载工具\"><a class=\"markdownIt-Anchor\" href=\"#下载工具\">#</a> 下载工具</h3>\n<ul>\n<li>OpenSSL 下载地址: <a href=\"https://slproweb.com/products/Win32OpenSSL.html\">https://slproweb.com/products/Win32OpenSSL.html</a></li>\n</ul>\n<blockquote>\n<p>本文使用版本 <code>Win64 OpenSSL v3.3.1</code>  下载最新版亦可</p>\n</blockquote>\n<ul>\n<li>AndroidDebugBridge 下载地址: <a href=\"https://adbdownload.com/\">https://adbdownload.com/</a></li>\n</ul>\n<blockquote>\n<p>本文使用版本 <code>R35.0.0</code>  下载最新版亦可</p>\n</blockquote>\n<p>如有需要可自行配置系统环境变量 <code>Path</code></p>\n<h3 id=\"转换证书\"><a class=\"markdownIt-Anchor\" href=\"#转换证书\">#</a> 转换证书</h3>\n<p>使用 <code>openssl</code>  将证书转为 <code>xx.0</code>  证书文件</p>\n<ol>\n<li>获取证书文件的哈希值</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># cer 证书文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>openssl x509 <span class=\"token parameter variable\">-inform</span> DER <span class=\"token parameter variable\">-subject_hash_old</span> <span class=\"token parameter variable\">-in</span> xxxx.cer</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># pem 证书文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>openssl x509 <span class=\"token parameter variable\">-inform</span> PEM <span class=\"token parameter variable\">-subject_hash_old</span> <span class=\"token parameter variable\">-in</span> xxxx.pem</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/13_/13_01.png\" alt=\"00\"></p>\n<ol>\n<li>生成 <code>.0</code>  证书文件</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># cer 证书文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>openssl x509 <span class=\"token parameter variable\">-inform</span> DER <span class=\"token parameter variable\">-text</span> <span class=\"token parameter variable\">-in</span> xxxx.cer <span class=\"token operator\">></span> 哈希值.0</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># pem 证书文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>openssl x509 <span class=\"token parameter variable\">-inform</span> PEM <span class=\"token parameter variable\">-text</span> <span class=\"token parameter variable\">-in</span> xxxx.pem <span class=\"token operator\">></span> 哈希值.0</pre></td></tr></table></figure><h3 id=\"导入证书\"><a class=\"markdownIt-Anchor\" href=\"#导入证书\">#</a> 导入证书</h3>\n<p>两种方法，任意即可</p>\n<ol>\n<li>\n<p>复制文件<br>\n Root 设备后，使用 MT 管理器 或 其他文件管理器 将下载的证书 <code>xx.0</code>  复制至系统 <code>/system/etc/security/cacerts/</code>  目录</p>\n</li>\n<li>\n<p>ADB 导入</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>adb root</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>adb shell avbctl disable-verification</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>adb remount</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># adb push 本地文件路径 Android 文件路径</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>adb push xx.0 /system/etc/security/cacerts/xx.0</pre></td></tr></table></figure><p>注意！一般 Root 之后便会开启 <code>system</code>  读写，但也有例外:<br>\n 如果是模拟器很可能是没有开启 <code>system</code>  写入，按下图开启即可 <s>被坑过 QwQ</s><br>\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/13_/13_01.png\" alt=\"01\" title=\"雷电模拟器9\"></p>\n<h2 id=\"绕过-bypass\"><a class=\"markdownIt-Anchor\" href=\"#绕过-bypass\">#</a> 绕过 Bypass</h2>\n<h3 id=\"下载工具-2\"><a class=\"markdownIt-Anchor\" href=\"#下载工具-2\">#</a> 下载工具</h3>\n<p>Magisk (任意即可):</p>\n<ul>\n<li>原版 (Magisk)：<a href=\"https://github.com/topjohnwu/Magisk/releases\">https://github.com/topjohnwu/Magisk/releases</a></li>\n<li>狐狸 (Kitsune Magisk)：<a href=\"https://huskydg.github.io/magisk-files/\">https://huskydg.github.io/magisk-files/</a></li>\n</ul>\n<blockquote>\n<p><code>Kitsune Magisk</code> <a href=\"https://blog.csdn.net/Ruaki/article/details/135580772\"> 下载教程</a></p>\n</blockquote>\n<p>JustTrustMe 模块下载地址: <a href=\"https://github.com/Fuzion24/JustTrustMe/releases/\">https://github.com/Fuzion24/JustTrustMe/releases/</a><br>\nXposed (任意即可):</p>\n<ul>\n<li>VirtualXposed 下载地址: <a href=\"https://virtualxposed.com/download/\">https://virtualxposed.com/download/</a></li>\n<li>LSPatch 下载地址: <a href=\"https://github.com/LSPosed/LSPatch/releases\">https://github.com/LSPosed/LSPatch/releases</a></li>\n<li>LSPosed 下载地址：<a href=\"https://github.com/LSPosed/LSPosed/releases/tag/v1.9.2\">https://github.com/LSPosed/LSPosed/releases/tag/v1.9.2</a></li>\n</ul>\n<blockquote>\n<p>本文以 <code>LSPosed + KitsuneMagisk</code>  介绍</p>\n</blockquote>\n<h3 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理</h3>\n<p>利用 Xposed + JustTrustMe 模块，绕过 SSL 证书检测</p>\n<h3 id=\"lsposed安装\"><a class=\"markdownIt-Anchor\" href=\"#lsposed安装\">#</a> LSPosed 安装</h3>\n<ol>\n<li>\n<p>在 <code>Magisk</code>  设置中将 <code>Zygisk</code>  设项打开，将设备重启即可<br>\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/13_/13_02.png\" alt=\"02\" title=\"Kitsune Magisk\"></p>\n</li>\n<li>\n<p>进入模块，选择从本地安装，选择 <code>LSPosed-v1.8.4-6609-zygisk-release.zip</code>  文件进行安装</p>\n</li>\n</ol>\n<blockquote>\n<p><code>LSPosed-v1.8.4-6609-zygisk-release.zip</code>  请从官网下载，记住是<strong> zygisk</strong></p>\n</blockquote>\n<ol start=\"3\">\n<li>安装 <code>LSPosed.apk</code> ，打开 LSPosed 可以看到处于激活的状态</li>\n</ol>\n<blockquote>\n<p><code>LSPosed.apk</code>  这个我也没从 Github 上找到，不过在另一个网页上找到 <a href=\"https://www.downkuai.com/android/175025.html\">下载地址</a></p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/13_/13_03.png\" alt=\"03\"></p>\n<h3 id=\"使用justtrustme模块\"><a class=\"markdownIt-Anchor\" href=\"#使用justtrustme模块\">#</a> 使用 JustTrustMe 模块</h3>\n<p>完成 LSPosed 配置后，安装 <code>TrustMeAlready.apk</code> 。在 LSPosed 模块上点击 <code>JustTrustMe</code> ，选择需要抓包的 App (小黑盒)，重新设备启动即可。<br>\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/13_/13_04.png\" alt=\"04\"></p>\n<hr>\n<p>此时便可愉快地抓包啦</p>\n",
            "tags": [
                "配置",
                "Android"
            ]
        }
    ]
}