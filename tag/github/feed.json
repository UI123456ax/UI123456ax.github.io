{
    "version": "https://jsonfeed.org/version/1",
    "title": "ほしづきよ • All posts by \"github\" tag",
    "description": "星月夜 ブログ",
    "home_page_url": "https://ui123456ax.github.io",
    "items": [
        {
            "id": "https://ui123456ax.github.io/2024/09/16/0_100/17_%E4%BD%BF%E7%94%A8CloudFlare%E7%BB%99GithubPage%E5%8A%A0%E9%80%9F/",
            "url": "https://ui123456ax.github.io/2024/09/16/0_100/17_%E4%BD%BF%E7%94%A8CloudFlare%E7%BB%99GithubPage%E5%8A%A0%E9%80%9F/",
            "title": "使用CloudFlare给GithubPage加速",
            "date_published": "2024-09-16T03:13:32.000Z",
            "content_html": "<h1 id=\"条件\"><a class=\"markdownIt-Anchor\" href=\"#条件\">#</a> 条件</h1>\n<ul>\n<li>域名</li>\n<li>CloudFlare 账号</li>\n<li>Github 账号</li>\n</ul>\n<h1 id=\"设置cloudflaredns解析\"><a class=\"markdownIt-Anchor\" href=\"#设置cloudflaredns解析\">#</a> 设置 CloudFlareDNS 解析</h1>\n<p>使用 CloudFlare 解析并添加自己的域名</p>\n<blockquote>\n<p>注意！输入自己的域名时不要带 www 或者 https</p>\n</blockquote>\n<p>在 DNS 解析设置界面添加一条<strong> CNAME</strong> 记录和一条<strong> A</strong> 记录</p>\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>name</th>\n<th>ip</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>@</td>\n<td>185.199.108.153</td>\n</tr>\n<tr>\n<td>CNAME</td>\n<td>www</td>\n<td><username>.github.io</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>其中 &lt;usename&gt; 为自己的 GitHub 仓库名</p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/17_/17_01.png\" alt=\"01\"></p>\n<p>如果上述行不通请参考以下方法：<br>\n手动将 DNS 解析指向 GitHubPages<br>\n 添加指向 GitHub Pages 的 IPv4 地址</p>\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>name</th>\n<th>ipv4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A</td>\n<td>@</td>\n<td>185.199.108.153</td>\n</tr>\n<tr>\n<td>A</td>\n<td>@</td>\n<td>185.199.109.153</td>\n</tr>\n<tr>\n<td>A</td>\n<td>@</td>\n<td>185.199.110.153</td>\n</tr>\n<tr>\n<td>A</td>\n<td>@</td>\n<td>185.199.111.153</td>\n</tr>\n</tbody>\n</table>\n<p>添加指向 GitHub Pages 的 IPv6 地址</p>\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>name</th>\n<th>ipv6</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AAA</td>\n<td>@</td>\n<td>2606:50c0:8000::153</td>\n</tr>\n<tr>\n<td>AAA</td>\n<td>@</td>\n<td>2606:50c0:8001::153</td>\n</tr>\n<tr>\n<td>AAA</td>\n<td>@</td>\n<td>2606:50c0:8002::153</td>\n</tr>\n<tr>\n<td>AAA</td>\n<td>@</td>\n<td>2606:50c0:8003::153</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"设置githubpage\"><a class=\"markdownIt-Anchor\" href=\"#设置githubpage\">#</a> 设置 GitHubPage</h1>\n<p><code>GitHub.io</code>  仓库地址中 <code>Settings</code>  里设置 pages，在 Custom domain 里输入自己的域名，点击 save<br>\n<img loading=\"lazy\" data-src=\"https://gcore.jsdelivr.net/gh/ui123456ax/PicGo/Blog_images/17_/17_02.png\" alt=\"02\"><br>\n 过一会就能生效了</p>\n<h1 id=\"优点\"><a class=\"markdownIt-Anchor\" href=\"#优点\">#</a> 优点</h1>\n<p>能加速域名下的所有内容，可以用来存储图床、博客文章等公开性内容至 GitHub</p>\n",
            "tags": [
                "github",
                "cloudflare"
            ]
        },
        {
            "id": "https://ui123456ax.github.io/2024/09/16/0_100/16_GitHub%E8%AE%BE%E7%BD%AE%E5%8F%8C%E8%B4%A6%E5%8F%B7%E4%B8%8A%E4%BC%A0/",
            "url": "https://ui123456ax.github.io/2024/09/16/0_100/16_GitHub%E8%AE%BE%E7%BD%AE%E5%8F%8C%E8%B4%A6%E5%8F%B7%E4%B8%8A%E4%BC%A0/",
            "title": "GitHub配置多账号git上传",
            "date_published": "2024-09-16T01:52:32.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>记录一次关于 Github 多账号 git 的配置<br>\n将仓库内容上传 <code>AccountA</code>  的同时上传到我的另一个账号 <code>AccountB</code></p>\n<h1 id=\"流程\"><a class=\"markdownIt-Anchor\" href=\"#流程\">#</a> 流程</h1>\n<h2 id=\"生成密钥\"><a class=\"markdownIt-Anchor\" href=\"#生成密钥\">#</a> 生成密钥</h2>\n<ol>\n<li>生成新的 SSH 密钥对（假设新密钥对的名称为 <code>id_rsa_b</code> ）</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ssh-keygen <span class=\"token parameter variable\">-t</span> ed25519 <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"your_email@example.com\"</span> <span class=\"token parameter variable\">-f</span> ~/.ssh/id_rsa_b</pre></td></tr></table></figure><ol start=\"2\">\n<li>将新生成的公钥添加到 GitHub 账号 B (AccountB) 的 SSH 密钥列表中</li>\n</ol>\n<ul>\n<li>打开密钥文件 (C:/Users/your_name/.ssh)</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> ~/.ssh/id_rsa_b.pub</pre></td></tr></table></figure><blockquote>\n<p>将里面的内容全部复制</p>\n</blockquote>\n<ul>\n<li>登录到 GitHub 账号 B，进入 <code>“Settings” -&gt; “SSH and GPG keys” -&gt; “New SSH key”</code> ，将公钥粘贴进去并保存</li>\n</ul>\n<h2 id=\"配置本地git以使用新的ssh密钥对\"><a class=\"markdownIt-Anchor\" href=\"#配置本地git以使用新的ssh密钥对\">#</a> 配置本地 Git 以使用新的 SSH 密钥对</h2>\n<p>在本地创建一个配置文件（例如 config），在其中添加多个账号的 SSH 配置信息。每个账号的配置信息应该以 Host 开头，后面跟着对应的域名和密钥路径</p>\n<ol>\n<li>创建 <code>config</code>  配置文件</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">touch</span> ~/.ssh/config</pre></td></tr></table></figure><blockquote>\n<p>无需后缀</p>\n</blockquote>\n<ol start=\"2\">\n<li><code>config</code>  文件内容</li>\n</ol>\n<pre><code># Account A\nHost github.com-AccountA\n    HostName github.com\n    User git\n    IdentityFile ~/.ssh/id_rsa_a\n\n# Account B\nHost github.com-AccountB\n    HostName github.com\n    User git\n    IdentityFile ~/.ssh/id_rsa_b\n</code></pre>\n<blockquote>\n<p><code>Account-B</code>  为你要切换时使用的账号名称</p>\n</blockquote>\n<h2 id=\"尝试添加git仓库\"><a class=\"markdownIt-Anchor\" href=\"#尝试添加git仓库\">#</a> 尝试添加 git 仓库</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> config user.name <span class=\"token string\">'AccountB'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> config user.email <span class=\"token string\">'AccountB@mail.com'</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Switch to account A</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> remote set-url origin git@github.com-AccountA:usernameA/repo.git</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># Switch to account B</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">git</span> remote set-url origin git@github.com-AccountB:usernameB/repo.git</pre></td></tr></table></figure><blockquote>\n<p><code>AccountB</code>  替换为你实际要切换到的账号名<br>\n <code>usernameB</code>  替换为该账号下的用户名<br>\n <code>repo</code>  替换为你要切换到的仓库名</p>\n</blockquote>\n<p>最后验证远程仓库是否已成功添加</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 本地仓库情况</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> remote <span class=\"token parameter variable\">-v</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 全局登录情况</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-T</span> git@github.com-AccountB.com</pre></td></tr></table></figure><blockquote>\n<p>显示所有已添加的远程仓库及其对应的 URL</p>\n</blockquote>\n<h2 id=\"git-push\"><a class=\"markdownIt-Anchor\" href=\"#git-push\">#</a> git push</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> init</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-am</span> <span class=\"token string\">\"first commit\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin git@AccountB:usernameB/repo.git</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">git</span> push <span class=\"token parameter variable\">-u</span> origin master</pre></td></tr></table></figure><h1 id=\"遇到的问题\"><a class=\"markdownIt-Anchor\" href=\"#遇到的问题\">#</a> 遇到的问题</h1>\n<p><code>error: remote origin already exists</code> <br>\n 这个错误表示远程仓库 “origin” 已经存在。可能原因有：</p>\n<ul>\n<li>没有成功配置 SSH 到 GitHub 账号上</li>\n<li>已经添加过该仓库</li>\n</ul>\n<h2 id=\"解决方法\"><a class=\"markdownIt-Anchor\" href=\"#解决方法\">#</a> 解决方法</h2>\n<ol>\n<li>重新配置。<strong>请确保每一步骤准确，文件配置恰当</strong></li>\n<li>删除并重新添加远程仓库</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> remote remove origin</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin git@github.com-AccountB:usernameB/repo.git</pre></td></tr></table></figure>",
            "tags": [
                "配置",
                "github"
            ]
        },
        {
            "id": "https://ui123456ax.github.io/2023/08/12/0_100/05_%E5%85%B3%E4%BA%8EGithub-Actions%E4%BD%BF%E7%94%A8Python%E8%87%AA%E5%8A%A8%E5%8C%96%E6%97%B6%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/",
            "url": "https://ui123456ax.github.io/2023/08/12/0_100/05_%E5%85%B3%E4%BA%8EGithub-Actions%E4%BD%BF%E7%94%A8Python%E8%87%AA%E5%8A%A8%E5%8C%96%E6%97%B6%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/",
            "title": "关于Github Actions使用Python自动化时报错的解决方法",
            "date_published": "2023-08-12T15:05:45.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>打算用 Python 写一个微信刷步放在 Github-Actions 每日自动刷步的 <a href=\"https://github.com/UI123456ax/run_zepp\">微信刷步项目</a><br>\n遇到了一些问题，本来都打算要放弃了呃 啊 (ノ｀Д) ノ，下面看看有没有和我一样问题</p>\n<h1 id=\"报错类型\"><a class=\"markdownIt-Anchor\" href=\"#报错类型\">#</a> 报错类型</h1>\n<p>报错 <code>Error: Version 3.9.1 with arch x64 not found</code> ，如图：<br>\n<img loading=\"lazy\" data-src=\"https://img.cdn.loliloli.net/images/2023/09/01/tR54.png\" alt=\"tR54.png\"><br>\n 搜索一番，最后在贴吧找到<strong>解决方法</strong>： <code>https://tieba.baidu.com/p/8172024054</code></p>\n<h2 id=\"原因\"><a class=\"markdownIt-Anchor\" href=\"#原因\">#</a> 原因</h2>\n<p>可能就是因为大部分人的 Runner 统一是 ubuntu-latest 导致的。</p>\n<blockquote>\n<p>Github 的 ubuntu-latest 标签会随机分发到 Ubuntu 22.04 LTS<br>\nUbuntu 22.04 LTS ，这个最新版的缓存并没有 Python3.9.1</p>\n</blockquote>\n<p>简单的说就是 Python v3.9.1 在 GitHub 不支持 Ubuntu 22.04 LTS<br>\n 所以才会报错 <code>Error: Version 3.9.1 with arch x64 not found</code></p>\n<h2 id=\"解决方法\"><a class=\"markdownIt-Anchor\" href=\"#解决方法\">#</a> 解决方法</h2>\n<p>有两个解决方法<br>\n 1. 把 runner 换成支持 3.9.1 的 Ubuntu20.04 :</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>runs-on: ubuntu-20.04 LST</pre></td></tr></table></figure><p>2. 将 .yml 里的  <code>python-version: '版本'</code>  换成  <code>3.9.12</code>  :</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>with:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>          python-version: <span class=\"token string\">'3.9.12'</span></pre></td></tr></table></figure><ul>\n<li>比起第一种解决方法，我比较推荐第二种方法</li>\n</ul>\n",
            "tags": [
                "Github",
                "Python",
                "报错"
            ]
        }
    ]
}