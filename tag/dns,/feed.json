{
    "version": "https://jsonfeed.org/version/1",
    "title": "ネオンノワール • All posts by \"dns,\" tag",
    "description": "NeonNoir ブログ",
    "home_page_url": "https://ui123456ax.github.io",
    "items": [
        {
            "id": "https://ui123456ax.github.io/2025/11/01/0_100/20_%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/",
            "url": "https://ui123456ax.github.io/2025/11/01/0_100/20_%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/",
            "title": "域名解析及其应用",
            "date_published": "2025-11-01T01:56:10.000Z",
            "content_html": "<h1 id=\"核心记录类型\"><a class=\"anchor\" href=\"#核心记录类型\">#</a> 核心记录类型</h1>\n<p>DNS 管理界面：“主机记录”（Host/Name）、“记录类型”（Type）、“记录值”（Value/Points to）、“TTL”</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">记录类型</th>\n<th style=\"text-align:left\">主机记录 (Host)</th>\n<th style=\"text-align:left\">记录值 (Value)</th>\n<th style=\"text-align:left\">用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>A</strong></td>\n<td style=\"text-align:left\"><code>www</code> ,  <code>@</code> ,  <code>blog</code></td>\n<td style=\"text-align:left\">一个 IPv4 地址 (如  <code>1.2.3.4</code> )</td>\n<td style=\"text-align:left\"><strong>指向服务器 IP</strong>：将域名指向你的网站或服务器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>AAAA</strong></td>\n<td style=\"text-align:left\"><code>www</code> ,  <code>@</code> ,  <code>ipv6</code></td>\n<td style=\"text-align:left\">一个 IPv6 地址</td>\n<td style=\"text-align:left\"><strong>指向 IPv6 地址</strong>：功能同 A 记录，用于支持 IPv6 的服务器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>CNAME</strong></td>\n<td style=\"text-align:left\"><code>www</code> ,  <code>mail</code></td>\n<td style=\"text-align:left\">另一个域名 (如  <code>pages.github.io</code> )</td>\n<td style=\"text-align:left\"><strong>设置别名</strong>：将一个域名指向另一个域名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>MX</strong></td>\n<td style=\"text-align:left\"><code>@</code></td>\n<td style=\"text-align:left\"><code>10 mx1.example.com.</code></td>\n<td style=\"text-align:left\"><strong>设置邮箱服务器</strong>： <code>10</code>  是优先级（数字越小越高）。可设置多条，实现主备邮箱服务器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>TXT</strong></td>\n<td style=\"text-align:left\"><code>@</code> ,  <code>_dmarc</code></td>\n<td style=\"text-align:left\">文本字符串</td>\n<td style=\"text-align:left\"><strong>验证与策略</strong>：常用于 SPF（防邮件伪造）、DKIM（邮件签名）、DMARC 和域名所有权验证</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>NS</strong></td>\n<td style=\"text-align:left\"><code>blog</code></td>\n<td style=\"text-align:left\"><code>ns1.otherprovider.com.</code></td>\n<td style=\"text-align:left\"><strong>委派子域名</strong>：将子域名的解析管理权交给其他 DNS 服务商。常用于部门或服务独立管理其域名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>SRV</strong></td>\n<td style=\"text-align:left\"><code>_minecraft._tcp.play</code></td>\n<td style=\"text-align:left\"><code>10 5 25565 server.example.com.</code></td>\n<td style=\"text-align:left\"><strong>指定服务端口</strong>：为特定服务（如 Minecraft、SIP）指定服务器和端口。格式为  <code>优先级 权重 端口 目标</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>CAA</strong></td>\n<td style=\"text-align:left\"><code>@</code></td>\n<td style=\"text-align:left\"><code>0 issue &quot;letsencrypt.org&quot;</code></td>\n<td style=\"text-align:left\"><strong>限制证书颁发机构</strong>：为提高安全，只允许指定的 CA 为你的域名颁发 SSL 证书</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>PTR</strong></td>\n<td style=\"text-align:left\"><code>1.1.168.192.in-addr.arpa</code></td>\n<td style=\"text-align:left\"><code>mail.example.com.</code></td>\n<td style=\"text-align:left\"><strong>反向解析 (IP -&gt; 域名)</strong>：主要用于邮件服务器反向检查</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>ALIAS / ANAME</strong></td>\n<td style=\"text-align:left\"><code>@</code></td>\n<td style=\"text-align:left\"><code>some-service.provider.com</code></td>\n<td style=\"text-align:left\"><strong>根域名别名 (非标)</strong>：类似 CNAME 但可用于根域名。这是 DNS 服务商提供的特殊功能（如 Cloudflare 的 CNAME Flattening），用于将根域名指向另一个域名</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意：</p>\n<ol>\n<li><code>@</code>  代表根域名（如  <code>example.com</code> ）</li>\n<li>根域名 ( <code>@</code> ) 通常不能设置  <code>CNAME</code>  记录</li>\n<li><code>PTR</code>  通常在你的 IP 提供商（云服务商 / IDC）处配置，而非域名 DNS 服务商处</li>\n</ol>\n</blockquote>\n<h1 id=\"域名与服务器\"><a class=\"anchor\" href=\"#域名与服务器\">#</a> 域名与服务器</h1>\n<h2 id=\"部署网站\"><a class=\"anchor\" href=\"#部署网站\">#</a> 部署网站</h2>\n<p>假设服务器 IP 是  <code>100.107.102.101</code> ，域名是  <code>mydomain.com</code></p>\n<p>例：让  <code>mydomain.com</code>  和  <code>www.mydomain.com</code>  都能访问网站</p>\n<ol>\n<li>\n<p><strong>设置根域名</strong>：添加 A 记录</p>\n<ul>\n<li>主机记录:  <code>@</code></li>\n<li>记录类型:  <code>A</code></li>\n<li>记录值:  <code>100.107.102.101</code></li>\n</ul>\n</li>\n<li>\n<p><strong>设置 www 子域名</strong>：添加 CNAME 记录，将其指向根域名</p>\n<ul>\n<li>主机记录:  <code>www</code></li>\n<li>记录类型:  <code>CNAME</code></li>\n<li>记录值:  <code>mydomain.com</code></li>\n</ul>\n<blockquote>\n<p>未来更换服务器 IP 时，只需修改 A 记录， <code>www</code>  会自动跟随变化</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"反向代理端口映射\"><a class=\"anchor\" href=\"#反向代理端口映射\">#</a> 反向代理：端口映射</h2>\n<p>标准的 DNS 记录（A 记录）只能将域名指向 IP 地址，不能直接指定端口。<br />\n想让域名映射端口，最正确的做法是配置一个 Web 服务器（Nginx 或 Apache）</p>\n<p>例：将域名（ <code>service.mydomain.com</code> ）指向服务器  <code>8080</code>  端口</p>\n<ol>\n<li><strong>DNS 设置</strong>：添加 A 记录，将域名指向服务器 IP 地址\n<ul>\n<li>主机记录： <code>service</code></li>\n<li>记录类型： <code>A</code></li>\n<li>记录值： <code>你的服务器IP</code></li>\n</ul>\n</li>\n<li><strong>服务器配置</strong>（以 Nginx 为例）\n<ul>\n<li>当收到访问  <code>service.mydomain.com</code>  的请求时，Nginx 会把这个请求转发到你服务器上运行在特定端口（比如 8080）的那个应用</li>\n<li>\n<blockquote>\n<p>Nginx 监听标准的 <strong>80/443</strong> 端口</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n<p>简单的 Nginx 配置：</p>\n<pre><code class=\"language-conf\">server &#123;\n    listen 80;\n    server_name service.mydomain.com;\n\n    location / &#123;\n        # 将所有请求转发到本机的 8080 端口\n        proxy_pass http://127.0.0.1:8080;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    &#125;\n&#125;\n</code></pre>\n<blockquote>\n<p>当用户通过浏览器访问时，会默认使用 80 (HTTP) 或 443 (HTTPS) 端口</p>\n</blockquote>\n<h2 id=\"反向代理代理镜像\"><a class=\"anchor\" href=\"#反向代理代理镜像\">#</a> 反向代理：代理镜像</h2>\n<p>用户通过访问 Nginx 服务器来访问目标网站，而目标网站的内容会被代理到指定的域名下</p>\n<blockquote>\n<p>DNS 配置同上同理</p>\n</blockquote>\n<h3 id=\"配置示例\"><a class=\"anchor\" href=\"#配置示例\">#</a> 配置示例</h3>\n<p>以下是一个 Nginx 的配置示例，将请求转发到不同的后端服务：</p>\n<pre><code class=\"language-conf\">server &#123;\n    listen 80;\n    server_name your-domain.com;  # 你的域名\n  \n    location / &#123;\n        # 目标网站地址\n        proxy_pass https://target-website.com;\n      \n        # 设置代理头信息\n        proxy_set_header Host target-website.com;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header User-Agent $http_user_agent;\n        proxy_set_header Accept-Encoding &quot;&quot;;\n      \n        # 禁用缓存以便实时镜像\n        proxy_buffering off;\n      \n        # 超时设置\n        proxy_connect_timeout 30s;\n        proxy_read_timeout 30s;\n    &#125;\n&#125;\n</code></pre>\n<h1 id=\"dns-高级配置\"><a class=\"anchor\" href=\"#dns-高级配置\">#</a> DNS 高级配置</h1>\n<h2 id=\"ns-记录-委派子域名管理权\"><a class=\"anchor\" href=\"#ns-记录-委派子域名管理权\">#</a> NS 记录 - 委派子域名管理权</h2>\n<p>例：将  <code>blog.mydomain.com</code>  这个子域名交给另一个解析平台或服务来管理（例如 CloudDns 双向解析至 CloudFlare）</p>\n<ul>\n<li><strong>操作</strong>：在  <code>mydomain.com</code>  的 DNS 设置中，添加 NS 记录\n<ul>\n<li>主机记录:  <code>blog</code></li>\n<li>记录类型:  <code>NS</code></li>\n<li>记录值:  <code>ns1.otherprovider.com</code>  (对方提供的 DNS 服务器地址)</li>\n<li>\n<blockquote>\n<p>通常需要添加至少两条 NS 记录</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><strong>效果</strong>：之后所有  <code>blog.mydomain.com</code>  及其下级域名（如  <code>posts.blog.mydomain.com</code> ）的解析请求，都会被导向  <code>ns1.otherprovider.com</code>  去处理</li>\n</ul>\n<blockquote>\n<p>根域名同理，将主机记录替换为  <code>@</code>  即可</p>\n</blockquote>\n<h2 id=\"srv-记录-指定服务端口\"><a class=\"anchor\" href=\"#srv-记录-指定服务端口\">#</a> SRV 记录 - 指定服务端口</h2>\n<p>例：配置 Minecraft 服务器或其他需要指定端口的服务</p>\n<ul>\n<li><strong>格式</strong>： <code>_服务._协议.主机记录</code></li>\n<li><strong>示例</strong>：为  <code>play.mydomain.com</code>  配置 Minecraft 服务\n<ul>\n<li>主机记录:  <code>_minecraft._tcp.play</code></li>\n<li>记录类型:  <code>SRV</code></li>\n<li>记录值 / 数据:  <code>10 5 25565 server.mydomain.com.</code>  (优先级 权重 端口 目标主机)</li>\n</ul>\n</li>\n<li><strong>解释</strong>：客户端连接  <code>play.mydomain.com</code>  时，会自动查找此 SRV 记录，并连接到  <code>server.mydomain.com</code>  的  <code>25565</code>  端口</li>\n</ul>\n<blockquote>\n<p><strong>SRV 记录可以指定服务的端口，但是绝大多数 Web 浏览器不支持通过 SRV 记录来访问网站</strong><br />\n SRV 记录主要用于特定协议的客户端自动发现服务，例如 Minecraft 游戏、VoIP 电话 (SIP)、邮件或即时通讯 (XMPP) 等，不适用于通用的 Web 访问<br />\n对于网站或 Web 应用，更多的是使用反向代理</p>\n</blockquote>\n<h2 id=\"caa-记录-限制-ssl-证书颁发机构\"><a class=\"anchor\" href=\"#caa-记录-限制-ssl-证书颁发机构\">#</a> CAA 记录 - 限制 SSL 证书颁发机构</h2>\n<p>例：为提高安全性，只允许 Let's Encrypt 为你的域名颁发证书</p>\n<ul>\n<li><strong>操作</strong>：添加 CAA 记录\n<ul>\n<li>主机记录:  <code>@</code></li>\n<li>记录类型:  <code>CAA</code></li>\n<li>记录值 / 数据:  <code>0 issue &quot;letsencrypt.org&quot;</code></li>\n</ul>\n</li>\n<li><strong>效果</strong>：其他 CA（证书颁发机构）在检查时会看到此记录，并拒绝为你的域名颁发证书</li>\n</ul>\n",
            "tags": [
                "Domain",
                "DNS,"
            ]
        }
    ]
}